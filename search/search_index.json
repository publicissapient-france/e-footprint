{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to the e-footprint documentation !","text":"<p>If you are new to e-footprint, start by checking out the explanation section, then the tutorial.</p> <p>All e-footprint objects, parameters and calculated attributes are listed in the e-footprint object reference. </p> <p>Moreover, e-footprint has higher-level functions to facilitate the construction of objects from fewer parameters. You can check them out in the e-footprint builders reference. </p> <p>The source code is available in the e-footprint github repository and a graphical interface is under construction to facilitate the use of the model (in beta for now, your feedback is appreciated). </p> <p>This project has been initiated by Vincent Villet for Publicis Sapient and is in the process of joining the green IT association Boavizta\u2019s ecosystem of open source tools. </p>"},{"location":"Autoscaling/","title":"Autoscaling","text":""},{"location":"Autoscaling/#params","title":"Params","text":""},{"location":"Autoscaling/#name","title":"name","text":"<p>A human readable description of the object.</p>"},{"location":"Autoscaling/#carbon_footprint_fabrication","title":"carbon_footprint_fabrication","text":"<p>carbon footprint fabrication of server in kilogram.</p>"},{"location":"Autoscaling/#power","title":"power","text":"<p>power of server in watt.</p>"},{"location":"Autoscaling/#lifespan","title":"lifespan","text":"<p>lifespan of server in year.</p>"},{"location":"Autoscaling/#idle_power","title":"idle_power","text":"<p>idle power of server in watt.</p>"},{"location":"Autoscaling/#ram","title":"ram","text":"<p>ram of server in gigabyte.</p>"},{"location":"Autoscaling/#cpu_cores","title":"cpu_cores","text":"<p>nb cpus cores of server in core.</p>"},{"location":"Autoscaling/#power_usage_effectiveness","title":"power_usage_effectiveness","text":"<p>pue of server in dimensionless.</p>"},{"location":"Autoscaling/#average_carbon_intensity","title":"average_carbon_intensity","text":"<p>average carbon intensity of server electricity in gram / kilowatt_hour.</p>"},{"location":"Autoscaling/#server_utilization_rate","title":"server_utilization_rate","text":"<p>server utilization rate in dimensionless.</p>"},{"location":"Autoscaling/#backwards-links","title":"Backwards links","text":"<ul> <li>Service</li> </ul>"},{"location":"Autoscaling/#calculated-attributes","title":"Calculated attributes","text":""},{"location":"Autoscaling/#available_ram_per_instance","title":"available_ram_per_instance","text":"<p>ExplainableQuantity in gigabyte, representing the available ram per server instance.  </p> <p>Example value: 114.9 gigabyte  </p> <p>Depends directly on:  </p> <ul> <li>RAM of server</li> <li>server utilization rate</li> <li>Base RAM consumption of service </li> </ul> <p>through the following calculations:  </p> <p>You can also visit the link to Available RAM per server instance\u2019s full calculation graph.</p>"},{"location":"Autoscaling/#available_cpu_per_instance","title":"available_cpu_per_instance","text":"<p>ExplainableQuantity in core, representing the available cpu per server instance.  </p> <p>Example value: 19.6 core  </p> <p>Depends directly on:  </p> <ul> <li>Nb cpus cores of server</li> <li>server utilization rate</li> <li>Base CPU consumption of service </li> </ul> <p>through the following calculations:  </p> <p>You can also visit the link to Available CPU per server instance\u2019s full calculation graph.</p>"},{"location":"Autoscaling/#all_services_cpu_needs","title":"all_services_cpu_needs","text":"<p>cpu needs of all services running on server in core.  </p> <p>Example value: 26281 values from 2024-12-31 22:00:00 to 2027-12-31 22:00:00 in core:     first 10 vals [0.4, 0.27, 0.07, 0.33, 0.2, 0.27, 0.53, 0.07, 0.6, 0.6],     last 10 vals [0.33, 0.33, 0.07, 0.6, 0.33, 0.27, 0.13, 0.4, 0.27, 0.6]  </p> <p>Depends directly on:  </p> <ul> <li>service hour by hour cpu need </li> </ul> <p>through the following calculations:  </p> <p>You can also visit the link to CPU needs of all services running on server\u2019s full calculation graph.</p>"},{"location":"Autoscaling/#all_services_ram_needs","title":"all_services_ram_needs","text":"<p>ram needs of all services running on server in gigabyte.  </p> <p>Example value: 26281 values from 2024-12-31 22:00:00 to 2027-12-31 22:00:00 in GB:     first 10 vals [0.02, 0.01, 0.0, 0.02, 0.01, 0.01, 0.03, 0.0, 0.03, 0.03],     last 10 vals [0.02, 0.02, 0.0, 0.03, 0.02, 0.01, 0.01, 0.02, 0.01, 0.03]  </p> <p>Depends directly on:  </p> <ul> <li>service hour by hour ram need </li> </ul> <p>through the following calculations:  </p> <p>You can also visit the link to RAM needs of all services running on server\u2019s full calculation graph.</p>"},{"location":"Autoscaling/#raw_nb_of_instances","title":"raw_nb_of_instances","text":"<p>hourly raw number of server instances in dimensionless.  </p> <p>Example value: 26281 values from 2024-12-31 22:00:00 to 2027-12-31 22:00:00 in dimensionless:     first 10 vals [0.02, 0.01, 0.0, 0.02, 0.01, 0.01, 0.03, 0.0, 0.03, 0.03],     last 10 vals [0.02, 0.02, 0.0, 0.03, 0.02, 0.01, 0.01, 0.02, 0.01, 0.03]  </p> <p>Depends directly on:  </p> <ul> <li>RAM needs of all services running on server</li> <li>Available RAM per server instance</li> <li>CPU needs of all services running on server</li> <li>Available CPU per server instance </li> </ul> <p>through the following calculations:  </p> <p>You can also visit the link to Hourly raw number of server instances\u2019s full calculation graph.</p>"},{"location":"Autoscaling/#nb_of_instances","title":"nb_of_instances","text":"<p>hourly number of server instances in dimensionless.  </p> <p>Example value: 26281 values from 2024-12-31 22:00:00 to 2027-12-31 22:00:00 in dimensionless:     first 10 vals [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0],     last 10 vals [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]  </p> <p>Depends directly on:  </p> <ul> <li>Hourly raw number of server instances </li> </ul> <p>through the following calculations:  </p> <p>You can also visit the link to Hourly number of server instances\u2019s full calculation graph.</p>"},{"location":"Autoscaling/#instances_fabrication_footprint","title":"instances_fabrication_footprint","text":"<p>hourly server instances fabrication footprint in kilogram.  </p> <p>Example value: 26281 values from 2024-12-31 22:00:00 to 2027-12-31 22:00:00 in kg:     first 10 vals [0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01],     last 10 vals [0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01]  </p> <p>Depends directly on:  </p> <ul> <li>Hourly number of server instances</li> <li>Carbon footprint fabrication of server</li> <li>Lifespan of server </li> </ul> <p>through the following calculations:  </p> <p>You can also visit the link to Hourly server instances fabrication footprint\u2019s full calculation graph.</p>"},{"location":"Autoscaling/#instances_energy","title":"instances_energy","text":"<p>hourly energy consumed by server instances in kilowatt_hour.  </p> <p>Example value: 26281 values from 2024-12-31 22:00:00 to 2027-12-31 22:00:00 in kWh:     first 10 vals [0.07, 0.06, 0.06, 0.07, 0.06, 0.06, 0.07, 0.06, 0.07, 0.07],     last 10 vals [0.07, 0.07, 0.06, 0.07, 0.07, 0.06, 0.06, 0.07, 0.06, 0.07]  </p> <p>Depends directly on:  </p> <ul> <li>Hourly number of server instances</li> <li>Idle power of server</li> <li>PUE of server</li> <li>Hourly raw number of server instances</li> <li>Power of server </li> </ul> <p>through the following calculations:  </p> <p>You can also visit the link to Hourly energy consumed by server instances\u2019s full calculation graph.</p>"},{"location":"Autoscaling/#energy_footprint","title":"energy_footprint","text":"<p>hourly server energy footprint in kilogram.  </p> <p>Example value: 26281 values from 2024-12-31 22:00:00 to 2027-12-31 22:00:00 in kg:     first 10 vals [0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01],     last 10 vals [0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01]  </p> <p>Depends directly on:  </p> <ul> <li>Hourly energy consumed by server instances</li> <li>Average carbon intensity of server electricity </li> </ul> <p>through the following calculations:  </p> <p>You can also visit the link to Hourly server energy footprint\u2019s full calculation graph.</p>"},{"location":"Changelog/","title":"Change Log","text":"<p>All notable changes to this project will be documented in this file.</p> <p>The format is based on Keep a Changelog and this project adheres to Semantic Versioning.</p>"},{"location":"Changelog/#400-2024-09-11","title":"[4.0.0] 2024-09-11","text":""},{"location":"Changelog/#changed","title":"Changed","text":"<ul> <li>Major update: usage is now described as hourly number of user journey starts. This allows for a chronological modeling and later will allow simulation of changes in the future.</li> <li>Server electricity consumption now depends on server load.</li> </ul>"},{"location":"Changelog/#300-2024-07-29","title":"[3.0.0] 2024-07-29","text":""},{"location":"Changelog/#changed_1","title":"Changed","text":"<ul> <li>Suppress DevicePopulation object and transfer its functions to UsagePattern for simplification of object structure. This change removes an ambiguity around the notion of visits and number of devices: by removing the notion of devices and users from the model, only user journey frequency is kept and there remains no confusion possible between user journey frequency and user journey frequency per user (which has disappeared).</li> <li>Minor import order refactoring to comply better with PEP8 guidelines.</li> </ul>"},{"location":"Changelog/#added","title":"Added","text":"<ul> <li>Content in the documentation.</li> </ul>"},{"location":"Changelog/#216-2024-06-13","title":"[2.1.6] 2024-06-13","text":""},{"location":"Changelog/#fixed","title":"Fixed","text":"<ul> <li>Force ModelingObject and ExplainableObject ids to start with a letter and not contain backslashes.</li> </ul>"},{"location":"Changelog/#215-2024-06-06","title":"[2.1.5] 2024-06-06","text":""},{"location":"Changelog/#fixed_1","title":"Fixed","text":"<ul> <li>Make ModelingObject and ExplainableObject ids css escaped.</li> </ul>"},{"location":"Changelog/#214-2024-05-17","title":"[2.1.4] 2024-05-17","text":""},{"location":"Changelog/#fixed_2","title":"Fixed","text":"<ul> <li>System footprints by category and object graph legend aligns to the right if server impact is bigger than devices impact</li> </ul>"},{"location":"Changelog/#213-2024-05-16","title":"[2.1.3] 2024-05-16","text":""},{"location":"Changelog/#changed_2","title":"Changed","text":"<ul> <li>Don\u2019t round up the number of users in parallel as it creates very wrong results when there are few users in parallel.</li> </ul>"},{"location":"Changelog/#212-2024-05-16","title":"[2.1.2] 2024-05-16","text":""},{"location":"Changelog/#fixed_3","title":"Fixed","text":"<ul> <li>\"ton\" unit to \"tonne\" because in Pint a ton is equal to 2000 pounds and not 1000 kg.</li> </ul>"},{"location":"Changelog/#211-2024-05-16","title":"[2.1.1] 2024-05-16","text":""},{"location":"Changelog/#fixed_4","title":"Fixed","text":"<ul> <li>Remove useless title parameter from EmissionPlotter class.</li> </ul>"},{"location":"Changelog/#210-2024-05-15","title":"[2.1.0] - 2024-05-15","text":""},{"location":"Changelog/#added_1","title":"Added","text":"<ul> <li>Possibility to export raw html in plot_footprints_by_category_and_object System method.</li> <li>Possibility to resize plot_footprints_by_category_and_object output\u2019s graph.</li> </ul>"},{"location":"Changelog/#changed_3","title":"Changed","text":"<ul> <li>Improve emission diffs graph and harmonize its colors and legend with the plot_footprints_by_category_and_object graph.</li> </ul>"},{"location":"Changelog/#205-2024-04-16","title":"[2.0.5] - 2024-04-16","text":""},{"location":"Changelog/#fixed_5","title":"Fixed","text":"<ul> <li>In function json_to_system make sure that System ids don\u2019t change at system loading time.</li> </ul>"},{"location":"Changelog/#204-2024-04-16","title":"[2.0.4] - 2024-04-16","text":""},{"location":"Changelog/#fixed_6","title":"Fixed","text":"<ul> <li>In function json_to_system make recompute Systems by using their init and after_init methods to make sure that all their internal variables are initialized.</li> </ul>"},{"location":"Changelog/#203-2024-04-15","title":"[2.0.3] - 2024-04-15","text":""},{"location":"Changelog/#fixed_7","title":"Fixed","text":"<ul> <li>In function json_to_system make sure that all objects unlinked to a system compute their calculated attributes, and not only Services.</li> </ul>"},{"location":"Changelog/#202-2024-04-15","title":"[2.0.2] - 2024-04-15","text":""},{"location":"Changelog/#fixed_8","title":"Fixed","text":"<ul> <li>Loading of system from json when there is a service that is not linked to a usage pattern (case when a service is installed on a server but doesn\u2019t receive requests).</li> </ul>"},{"location":"Changelog/#201-2024-04-12","title":"[2.0.1] - 2024-04-12","text":""},{"location":"Changelog/#fixed_9","title":"Fixed","text":"<ul> <li>Setup of previous attribute value for lists at e-footprint object initiation when using the json_to_system function, so that recomputation works fine when list attributes are updated.</li> </ul>"},{"location":"Changelog/#200-2024-04-06","title":"[2.0.0] - 2024-04-06","text":""},{"location":"Changelog/#added_2","title":"Added","text":"<ul> <li>Job object for the encapsulation of request information, to introduce the possibility to have multiple request to services for a single user journey step.</li> <li>Job builders from Boavizta\u2019s ecobenchmark data</li> </ul>"},{"location":"Changelog/#132-2024-03-20","title":"[1.3.2] - 2024-03-20","text":""},{"location":"Changelog/#added_3","title":"Added","text":"<ul> <li>Characterics of objects are now displayed when hovering over a node in an object relationship graph (to create such a graph use the object_relationship_graph_to_file method of the ModelingObject class).</li> </ul>"},{"location":"Changelog/#131-2024-03-16","title":"[1.3.1] - 2024-03-16","text":""},{"location":"Changelog/#fixed_10","title":"Fixed","text":"<ul> <li>set modeling obj container of ExplainableObjects created through json_to_system function so that accessing their id property doesn\u2019t trigger a ValueError because of a null modeling_obj_container.</li> <li>Fixed ExplainableObject\u2019s set_label method so that it doesn\u2019t duplicate \"from source.name\" when reconstructing the object with the json_to_system function.</li> </ul>"},{"location":"Changelog/#130-2024-03-15","title":"[1.3.0] - 2024-03-15","text":""},{"location":"Changelog/#added_4","title":"Added","text":"<ul> <li>plot_emission_diffs method to System for easy analysis of System changes.</li> <li>Tutorial to documentation.</li> <li>System changes analysis in tutorial.</li> </ul>"},{"location":"Changelog/#122-2024-03-08","title":"[1.2.2] - 2024-03-08","text":""},{"location":"Changelog/#added_5","title":"Added","text":"<ul> <li>notebook parameter in object and calculus graph generation functions + set cdn_resources=in_line in pyvis Network objects to silence jupyter warning</li> <li>to_json, repr and str methods in ExplainableObject subclasses and ModelingObject.</li> </ul>"},{"location":"Changelog/#changed_4","title":"Changed","text":"<ul> <li>quickstart as jupyter notebook</li> </ul>"},{"location":"Changelog/#121-2024-02-29","title":"[1.2.1] - 2024-02-29","text":""},{"location":"Changelog/#added_6","title":"Added","text":""},{"location":"Changelog/#changed_5","title":"Changed","text":""},{"location":"Changelog/#fixed_11","title":"Fixed","text":"<ul> <li>Possibility to use fixed_nb_of_instances with the on_premise_server_from_config builder.</li> </ul>"},{"location":"Changelog/#120-2024-02-29","title":"[1.2.0] - 2024-02-29","text":""},{"location":"Changelog/#added_7","title":"Added","text":"<ul> <li>Possibility to specify the fixed number of on premise instances through the fixed_nb_of_instances attribute</li> <li>Doc generation logic with mkdocs. Here is the link to the e-footprint documentation.</li> </ul>"},{"location":"Changelog/#changed_6","title":"Changed","text":""},{"location":"Changelog/#fixed_12","title":"Fixed","text":"<ul> <li>File paths in graphs generating functions</li> </ul>"},{"location":"Changelog/#119-2024-02-12","title":"[1.1.9] - 2024-02-12","text":""},{"location":"Changelog/#added_8","title":"Added","text":"<ul> <li>system_to_json and json_to_system functions in api_utils package in order to be able to save a system as json file and then load it and run computations. Saving of intermediate calculations will be implemented in another release.</li> </ul>"},{"location":"Changelog/#changed_7","title":"Changed","text":"<ul> <li>calculated_attributes are now a property method instead of an attribute, to facilitate system to json and json to system flow.</li> <li>calculated attributes of System class are now properties for a more coherent syntax.</li> <li>Countries class is now made of country generator objects to avoid unwanted link between systems that would share a common country.</li> <li>System now inherits from ModelingObject</li> </ul>"},{"location":"Changelog/#118-2024-02-02","title":"[1.1.8] - 2024-02-02","text":""},{"location":"Changelog/#added_9","title":"Added","text":"<ul> <li>calculus_graph_to_file function in ExplainableObject to more easily create calculus graphs</li> <li>object_relationship_graph_to_file function in ModelingObject to more easily create object relationship graphs</li> <li>Generic self_delete method for ModelingObjects</li> </ul>"},{"location":"Changelog/#changed_8","title":"Changed","text":"<ul> <li>System now inherits from ModelingObject</li> </ul>"},{"location":"Changelog/#117-2024-01-29","title":"[1.1.7] - 2024-01-29","text":""},{"location":"Changelog/#added_10","title":"Added","text":""},{"location":"Changelog/#changed_9","title":"Changed","text":"<ul> <li>Put ModelingObject list update logic in ModelingObject setattr method</li> <li>Name server CPU capacity cpu_cores instead of nb_of_cpus to make it clearer</li> </ul>"},{"location":"Changelog/#fixed_13","title":"Fixed","text":"<ul> <li>Set input attribute label at attribute setting time and not after. Avoids a bug when the input attribute of a ModelingObject is the result of a calculation and hence has no label.</li> </ul>"},{"location":"Changelog/#116-2024-01-29","title":"[1.1.6] - 2024-01-29","text":""},{"location":"Changelog/#added_11","title":"Added","text":""},{"location":"Changelog/#changed_10","title":"Changed","text":"<ul> <li>Put all the naming logic that was in SourceValue and SourceObject classes into ExplainableObject</li> </ul>"},{"location":"Changelog/#fixed_14","title":"Fixed","text":"<ul> <li>Boaviztapi server builders to accommodate for Boaviztapi update. </li> </ul>"},{"location":"Changelog/#115-2024-01-18","title":"[1.1.5] - 2024-01-18","text":""},{"location":"Changelog/#added_12","title":"Added","text":"<ul> <li>plot_footprints_by_category_and_object method to the System object, to display the CO2 emission breakdown by object type (server, storage, network, end user devices), emission types (from electricity and from fabrication), and by objects within object types (for example, the share of each server within the servers).</li> <li>Default object builders that return a new object each time.</li> <li>Server builders based on the Boavizta API.</li> </ul>"},{"location":"Changelog/#changed_11","title":"Changed","text":"<ul> <li>Suppress the notion of server_ram_per_data_transferred to simply directly specify the ram_needed for UserJourneyStep objects.</li> <li>More explicity quickstart with all attributes explicitely named and set.</li> </ul>"},{"location":"Changelog/#fixed_15","title":"Fixed","text":""},{"location":"Changelog/#114-2023-11-13","title":"[1.1.4] - 2023-11-13","text":""},{"location":"Changelog/#added_13","title":"Added","text":""},{"location":"Changelog/#changed_12","title":"Changed","text":""},{"location":"Changelog/#fixed_16","title":"Fixed","text":"<ul> <li>Don\u2019t write logs to file by default to avoid unnecessary storage usage + be compliant with Streamlit Cloud security.</li> </ul>"},{"location":"Changelog/#113-2023-11-13","title":"[1.1.3] - 2023-11-13","text":""},{"location":"Changelog/#added_14","title":"Added","text":""},{"location":"Changelog/#changed_13","title":"Changed","text":""},{"location":"Changelog/#fixed_17","title":"Fixed","text":"<ul> <li>Put data folder (for logs) inside module and set default log level to INFO.</li> </ul>"},{"location":"Changelog/#112-2023-11-10","title":"[1.1.2] - 2023-11-10","text":""},{"location":"Changelog/#added_15","title":"Added","text":"<ul> <li>Missing tests.</li> <li>Optimisations that can lead to 10x+ improvements in complex systems initiation speed.</li> </ul>"},{"location":"Changelog/#changed_14","title":"Changed","text":"<ul> <li>Clarification of vocabulary in ExplainableObject class: an ExplainableObject now links to its children, to follow a genealogical logic.</li> <li>Graph colors for more color blindness friendliness. Reach out if this is still unsatisfactory !</li> </ul>"},{"location":"Changelog/#fixed_18","title":"Fixed","text":"<ul> <li>Object link recomputation logic: the launch_attributes_computation_chain function in the ModelingObject class now allows for a breadth first exploration of the object link graph to recompute object attributes in the right order. </li> </ul>"},{"location":"Changelog/#111-2023-11-03","title":"[1.1.1] - 2023-11-03","text":""},{"location":"Changelog/#added_16","title":"Added","text":""},{"location":"Changelog/#changed_15","title":"Changed","text":""},{"location":"Changelog/#fixed_19","title":"Fixed","text":"<ul> <li>Possibility to have a null service as input for user journey steps (in cases when the user simply uses the device without any service call).</li> <li>UserJourney\u2019s add_step method didn\u2019t trigger setattr because of the use of the self.uj_steps.append(new_step) syntax, and hence didn\u2019t trigger the appropriate recomputation logic. Fixed by replacing it with the self.uj_steps = self.uj_steps + [new_step] syntax.</li> <li>graph_tools module doesn\u2019t depend any more on special selenium screenshot functions that are only used during development. Such functions have been moved to the dev_utils package that only contains modules not used in the project because they are work in progress or dev helper functions.</li> <li>Fixed the convert_to_utc_test that had broken because of time change  </li> </ul>"},{"location":"Changelog/#110-2023-10-26","title":"[1.1.0] - 2023-10-26","text":"<p>State of project at time of open sourcing.</p>"},{"location":"Changelog/#added_17","title":"Added","text":"<p>Full optimization of recomputation whenever an input or object relationship changes.</p>"},{"location":"Country/","title":"Country","text":""},{"location":"Country/#params","title":"Params","text":""},{"location":"Country/#name","title":"name","text":"<p>A human readable description of the object.</p>"},{"location":"Country/#short_name","title":"short_name","text":"<p>description to be done</p>"},{"location":"Country/#average_carbon_intensity","title":"average_carbon_intensity","text":"<p>average carbon intensity of devices country in gram / kilowatt_hour.</p>"},{"location":"Country/#year","title":"year","text":"<p>description to be done</p>"},{"location":"Country/#timezone","title":"timezone","text":"<p>description to be done</p>"},{"location":"Country/#backwards-links","title":"Backwards links","text":"<ul> <li>UsagePattern</li> </ul>"},{"location":"Country/#calculated-attributes","title":"Calculated attributes","text":""},{"location":"Hardware/","title":"Hardware","text":""},{"location":"Hardware/#params","title":"Params","text":""},{"location":"Hardware/#name","title":"name","text":"<p>A human readable description of the object.</p>"},{"location":"Hardware/#carbon_footprint_fabrication","title":"carbon_footprint_fabrication","text":"<p>carbon footprint fabrication of device on which the user journey is made in kilogram.</p>"},{"location":"Hardware/#power","title":"power","text":"<p>power of device on which the user journey is made in watt.</p>"},{"location":"Hardware/#lifespan","title":"lifespan","text":"<p>lifespan of device on which the user journey is made in year.</p>"},{"location":"Hardware/#fraction_of_usage_time","title":"fraction_of_usage_time","text":"<p>device on which the user journey is made fraction of usage time in hour / day.</p>"},{"location":"Hardware/#backwards-links","title":"Backwards links","text":"<ul> <li>UsagePattern</li> </ul>"},{"location":"Hardware/#calculated-attributes","title":"Calculated attributes","text":""},{"location":"Job/","title":"Job","text":""},{"location":"Job/#params","title":"Params","text":""},{"location":"Job/#name","title":"name","text":"<p>A human readable description of the object.</p>"},{"location":"Job/#service","title":"service","text":"<p>An instance of Service.</p>"},{"location":"Job/#data_upload","title":"data_upload","text":"<p>data upload of request streaming in megabyte.</p>"},{"location":"Job/#data_download","title":"data_download","text":"<p>data download of request streaming in megabyte.</p>"},{"location":"Job/#request_duration","title":"request_duration","text":"<p>request duration to service in streaming in hour.</p>"},{"location":"Job/#cpu_needed","title":"cpu_needed","text":"<p>cpu needed on server server to process streaming in core.</p>"},{"location":"Job/#ram_needed","title":"ram_needed","text":"<p>ram needed on server server to process streaming in megabyte.</p>"},{"location":"Job/#job_type","title":"job_type","text":"<p>description to be done</p>"},{"location":"Job/#description","title":"description","text":"<p>description to be done</p>"},{"location":"Job/#backwards-links","title":"Backwards links","text":"<ul> <li>UserJourneyStep</li> </ul>"},{"location":"Job/#calculated-attributes","title":"Calculated attributes","text":""},{"location":"Job/#hourly_occurrences_per_usage_pattern","title":"hourly_occurrences_per_usage_pattern","text":"<p>Dictionary with UsagePattern as keys and                          hourly streaming occurrences in usage pattern as values, in dimensionless.  </p> <p>Example value: { id-fff41e-usage-pattern: 26281 values from 2024-12-31 22:00:00 to 2027-12-31 22:00:00 in dimensionless:     first 10 vals [6, 4, 1, 5, 3, 4, 8, 1, 9, 9],     last 10 vals [5, 5, 1, 9, 5, 4, 2, 6, 4, 9],  }  </p> <p>Depends directly on:  </p> <ul> <li>usage pattern UTC </li> </ul> <p>through the following calculations:  </p> <p>You can also visit the link to Hourly streaming occurrences in usage pattern\u2019s full calculation graph.</p>"},{"location":"Job/#hourly_avg_occurrences_per_usage_pattern","title":"hourly_avg_occurrences_per_usage_pattern","text":"<p>Dictionary with UsagePattern as keys and                          average hourly streaming occurrences in usage pattern as values, in dimensionless.  </p> <p>Example value: { id-fff41e-usage-pattern: 26281 values from 2024-12-31 22:00:00 to 2027-12-31 22:00:00 in dimensionless:     first 10 vals [0.4, 0.27, 0.07, 0.33, 0.2, 0.27, 0.53, 0.07, 0.6, 0.6],     last 10 vals [0.33, 0.33, 0.07, 0.6, 0.33, 0.27, 0.13, 0.4, 0.27, 0.6],  }  </p> <p>Depends directly on:  </p> <ul> <li>Hourly streaming occurrences in usage pattern</li> <li>Request duration to service in streaming </li> </ul> <p>through the following calculations:  </p> <p>You can also visit the link to Average hourly streaming occurrences in usage pattern\u2019s full calculation graph.</p>"},{"location":"Job/#hourly_data_upload_per_usage_pattern","title":"hourly_data_upload_per_usage_pattern","text":"<p>Dictionary with UsagePattern as keys and                          hourly data upload for streaming in usage pattern as values, in terabyte.  </p> <p>Example value: { id-fff41e-usage-pattern: 26281 values from 2024-12-31 22:00:00 to 2027-12-31 22:00:00 in TB:     first 10 vals [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0],     last 10 vals [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0],  }  </p> <p>Depends directly on:  </p> <ul> <li>Hourly streaming occurrences in usage pattern</li> <li>Data upload of request streaming </li> </ul> <p>through the following calculations:  </p> <p>You can also visit the link to Hourly data upload for streaming in usage pattern\u2019s full calculation graph.</p>"},{"location":"Job/#hourly_data_download_per_usage_pattern","title":"hourly_data_download_per_usage_pattern","text":"<p>Dictionary with UsagePattern as keys and                          hourly data download for streaming in usage pattern as values, in megabyte.  </p> <p>Example value: { id-fff41e-usage-pattern: 26281 values from 2024-12-31 22:00:00 to 2027-12-31 22:00:00 in MB:     first 10 vals [4800.0, 3200.0, 800.0, 4000.0, 2400.0, 3200.0, 6400.0, 800.0, 7200.0, 7200.0],     last 10 vals [4000.0, 4000.0, 800.0, 7200.0, 4000.0, 3200.0, 1600.0, 4800.0, 3200.0, 7200.0],  }  </p> <p>Depends directly on:  </p> <ul> <li>Hourly streaming occurrences in usage pattern</li> <li>Data download of request streaming </li> </ul> <p>through the following calculations:  </p> <p>You can also visit the link to Hourly data download for streaming in usage pattern\u2019s full calculation graph.</p>"},{"location":"Job/#hourly_occurrences_across_usage_patterns","title":"hourly_occurrences_across_usage_patterns","text":"<p>hourly streaming occurrences across usage patterns in dimensionless.  </p> <p>Example value: 26281 values from 2024-12-31 22:00:00 to 2027-12-31 22:00:00 in dimensionless:     first 10 vals [6, 4, 1, 5, 3, 4, 8, 1, 9, 9],     last 10 vals [5, 5, 1, 9, 5, 4, 2, 6, 4, 9]  </p> <p>Depends directly on:  </p> <ul> <li>Hourly streaming occurrences in usage pattern </li> </ul> <p>through the following calculations:  </p> <p>You can also visit the link to Hourly streaming occurrences across usage patterns\u2019s full calculation graph.</p>"},{"location":"Job/#hourly_avg_occurrences_across_usage_patterns","title":"hourly_avg_occurrences_across_usage_patterns","text":"<p>hourly streaming average occurrences across usage patterns in dimensionless.  </p> <p>Example value: 26281 values from 2024-12-31 22:00:00 to 2027-12-31 22:00:00 in dimensionless:     first 10 vals [0.4, 0.27, 0.07, 0.33, 0.2, 0.27, 0.53, 0.07, 0.6, 0.6],     last 10 vals [0.33, 0.33, 0.07, 0.6, 0.33, 0.27, 0.13, 0.4, 0.27, 0.6]  </p> <p>Depends directly on:  </p> <ul> <li>Average hourly streaming occurrences in usage pattern </li> </ul> <p>through the following calculations:  </p> <p>You can also visit the link to Hourly streaming average occurrences across usage patterns\u2019s full calculation graph.</p>"},{"location":"Job/#hourly_data_upload_across_usage_patterns","title":"hourly_data_upload_across_usage_patterns","text":"<p>hourly streaming data upload across usage patterns in terabyte.  </p> <p>Example value: 26281 values from 2024-12-31 22:00:00 to 2027-12-31 22:00:00 in TB:     first 10 vals [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0],     last 10 vals [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]  </p> <p>Depends directly on:  </p> <ul> <li>Hourly data upload for streaming in usage pattern </li> </ul> <p>through the following calculations:  </p> <p>You can also visit the link to Hourly streaming data upload across usage patterns\u2019s full calculation graph.</p>"},{"location":"Network/","title":"Network","text":""},{"location":"Network/#params","title":"Params","text":""},{"location":"Network/#name","title":"name","text":"<p>A human readable description of the object.</p>"},{"location":"Network/#bandwidth_energy_intensity","title":"bandwidth_energy_intensity","text":"<p>bandwith energy intensity of network in kilowatt_hour / gigabyte.</p>"},{"location":"Network/#backwards-links","title":"Backwards links","text":"<ul> <li>UsagePattern</li> </ul>"},{"location":"Network/#calculated-attributes","title":"Calculated attributes","text":""},{"location":"Network/#energy_footprint","title":"energy_footprint","text":"<p>hourly network energy footprint in kilogram.  </p> <p>Example value: 26281 values from 2024-12-31 22:00:00 to 2027-12-31 22:00:00 in kg:     first 10 vals [0.02, 0.01, 0.0, 0.02, 0.01, 0.01, 0.03, 0.0, 0.03, 0.03],     last 10 vals [0.02, 0.02, 0.0, 0.03, 0.02, 0.01, 0.01, 0.02, 0.01, 0.03]  </p> <p>Depends directly on:  </p> <ul> <li>Hourly data upload for streaming in usage pattern</li> <li>Hourly data download for streaming in usage pattern</li> <li>bandwith energy intensity of network</li> <li>Average carbon intensity of devices country </li> </ul> <p>through the following calculations:  </p> <p>You can also visit the link to Hourly network energy footprint\u2019s full calculation graph.</p>"},{"location":"OnPremise/","title":"OnPremise","text":""},{"location":"OnPremise/#params","title":"Params","text":""},{"location":"OnPremise/#name","title":"name","text":"<p>A human readable description of the object.</p>"},{"location":"OnPremise/#carbon_footprint_fabrication","title":"carbon_footprint_fabrication","text":"<p>carbon footprint fabrication of on premise server in kilogram.</p>"},{"location":"OnPremise/#power","title":"power","text":"<p>power of on premise server in watt.</p>"},{"location":"OnPremise/#lifespan","title":"lifespan","text":"<p>lifespan of on premise server in year.</p>"},{"location":"OnPremise/#idle_power","title":"idle_power","text":"<p>idle power of on premise server in watt.</p>"},{"location":"OnPremise/#ram","title":"ram","text":"<p>ram of on premise server in gigabyte.</p>"},{"location":"OnPremise/#cpu_cores","title":"cpu_cores","text":"<p>nb cpus cores of on premise server in core.</p>"},{"location":"OnPremise/#power_usage_effectiveness","title":"power_usage_effectiveness","text":"<p>pue of on premise server in dimensionless.</p>"},{"location":"OnPremise/#average_carbon_intensity","title":"average_carbon_intensity","text":"<p>average carbon intensity of on premise server electricity in gram / kilowatt_hour.</p>"},{"location":"OnPremise/#server_utilization_rate","title":"server_utilization_rate","text":"<p>on premise server utilization rate in dimensionless.</p>"},{"location":"OnPremise/#fixed_nb_of_instances","title":"fixed_nb_of_instances","text":"<p>user defined number of on premise server instances in dimensionless.</p>"},{"location":"OnPremise/#backwards-links","title":"Backwards links","text":"<ul> <li>Service</li> </ul>"},{"location":"OnPremise/#calculated-attributes","title":"Calculated attributes","text":""},{"location":"OnPremise/#available_ram_per_instance","title":"available_ram_per_instance","text":"<p>ExplainableQuantity in gigabyte, representing the available ram per on premise server instance.  </p> <p>Example value: 114.9 gigabyte  </p> <p>Depends directly on:  </p> <ul> <li>RAM of on premise server</li> <li>on premise server utilization rate</li> <li>Base RAM consumption of service </li> </ul> <p>through the following calculations:  </p> <p>You can also visit the link to Available RAM per on premise server instance\u2019s full calculation graph.</p>"},{"location":"OnPremise/#available_cpu_per_instance","title":"available_cpu_per_instance","text":"<p>ExplainableQuantity in core, representing the available cpu per on premise server instance.  </p> <p>Example value: 19.6 core  </p> <p>Depends directly on:  </p> <ul> <li>Nb cpus cores of on premise server</li> <li>on premise server utilization rate</li> <li>Base CPU consumption of service </li> </ul> <p>through the following calculations:  </p> <p>You can also visit the link to Available CPU per on premise server instance\u2019s full calculation graph.</p>"},{"location":"OnPremise/#all_services_cpu_needs","title":"all_services_cpu_needs","text":"<p>cpu needs of all services running on on premise server in core.  </p> <p>Example value: 26281 values from 2024-12-31 22:00:00 to 2027-12-31 22:00:00 in core:     first 10 vals [0.4, 0.27, 0.07, 0.33, 0.2, 0.27, 0.53, 0.07, 0.6, 0.6],     last 10 vals [0.33, 0.33, 0.07, 0.6, 0.33, 0.27, 0.13, 0.4, 0.27, 0.6]  </p> <p>Depends directly on:  </p> <ul> <li>service hour by hour cpu need </li> </ul> <p>through the following calculations:  </p> <p>You can also visit the link to CPU needs of all services running on on premise server\u2019s full calculation graph.</p>"},{"location":"OnPremise/#all_services_ram_needs","title":"all_services_ram_needs","text":"<p>ram needs of all services running on on premise server in gigabyte.  </p> <p>Example value: 26281 values from 2024-12-31 22:00:00 to 2027-12-31 22:00:00 in GB:     first 10 vals [0.02, 0.01, 0.0, 0.02, 0.01, 0.01, 0.03, 0.0, 0.03, 0.03],     last 10 vals [0.02, 0.02, 0.0, 0.03, 0.02, 0.01, 0.01, 0.02, 0.01, 0.03]  </p> <p>Depends directly on:  </p> <ul> <li>service hour by hour ram need </li> </ul> <p>through the following calculations:  </p> <p>You can also visit the link to RAM needs of all services running on on premise server\u2019s full calculation graph.</p>"},{"location":"OnPremise/#raw_nb_of_instances","title":"raw_nb_of_instances","text":"<p>hourly raw number of on premise server instances in dimensionless.  </p> <p>Example value: 26281 values from 2024-12-31 22:00:00 to 2027-12-31 22:00:00 in dimensionless:     first 10 vals [0.02, 0.01, 0.0, 0.02, 0.01, 0.01, 0.03, 0.0, 0.03, 0.03],     last 10 vals [0.02, 0.02, 0.0, 0.03, 0.02, 0.01, 0.01, 0.02, 0.01, 0.03]  </p> <p>Depends directly on:  </p> <ul> <li>RAM needs of all services running on on premise server</li> <li>Available RAM per on premise server instance</li> <li>CPU needs of all services running on on premise server</li> <li>Available CPU per on premise server instance </li> </ul> <p>through the following calculations:  </p> <p>You can also visit the link to Hourly raw number of on premise server instances\u2019s full calculation graph.</p>"},{"location":"OnPremise/#nb_of_instances","title":"nb_of_instances","text":"<p>fixed number of on premise server instances in dimensionless.  </p> <p>Example value: 26281 values from 2024-12-31 22:00:00 to 2027-12-31 22:00:00 in dimensionless:     first 10 vals [4000, 4000, 4000, 4000, 4000, 4000, 4000, 4000, 4000, 4000],     last 10 vals [4000, 4000, 4000, 4000, 4000, 4000, 4000, 4000, 4000, 4000]  </p> <p>Depends directly on:  </p> <ul> <li>Hourly raw number of on premise server instances</li> <li>User defined number of on premise server instances </li> </ul> <p>through the following calculations:  </p> <p>You can also visit the link to Fixed number of on premise server instances\u2019s full calculation graph.</p>"},{"location":"OnPremise/#instances_fabrication_footprint","title":"instances_fabrication_footprint","text":"<p>hourly on premise server instances fabrication footprint in kilogram.  </p> <p>Example value: 26281 values from 2024-12-31 22:00:00 to 2027-12-31 22:00:00 in kg:     first 10 vals [45.63, 45.63, 45.63, 45.63, 45.63, 45.63, 45.63, 45.63, 45.63, 45.63],     last 10 vals [45.63, 45.63, 45.63, 45.63, 45.63, 45.63, 45.63, 45.63, 45.63, 45.63]  </p> <p>Depends directly on:  </p> <ul> <li>Fixed number of on premise server instances</li> <li>Carbon footprint fabrication of on premise server</li> <li>Lifespan of on premise server </li> </ul> <p>through the following calculations:  </p> <p>You can also visit the link to Hourly on premise server instances fabrication footprint\u2019s full calculation graph.</p>"},{"location":"OnPremise/#instances_energy","title":"instances_energy","text":"<p>hourly energy consumed by on premise server instances in kilowatt_hour.  </p> <p>Example value: 26281 values from 2024-12-31 22:00:00 to 2027-12-31 22:00:00 in kWh:     first 10 vals [240.01, 240.0, 240.0, 240.01, 240.0, 240.0, 240.01, 240.0, 240.01, 240.01],     last 10 vals [240.01, 240.01, 240.0, 240.01, 240.01, 240.0, 240.0, 240.01, 240.0, 240.01]  </p> <p>Depends directly on:  </p> <ul> <li>Fixed number of on premise server instances</li> <li>Idle power of on premise server</li> <li>PUE of on premise server</li> <li>Hourly raw number of on premise server instances</li> <li>Power of on premise server </li> </ul> <p>through the following calculations:  </p> <p>You can also visit the link to Hourly energy consumed by on premise server instances\u2019s full calculation graph.</p>"},{"location":"OnPremise/#energy_footprint","title":"energy_footprint","text":"<p>hourly on premise server energy footprint in kilogram.  </p> <p>Example value: 26281 values from 2024-12-31 22:00:00 to 2027-12-31 22:00:00 in kg:     first 10 vals [24.0, 24.0, 24.0, 24.0, 24.0, 24.0, 24.0, 24.0, 24.0, 24.0],     last 10 vals [24.0, 24.0, 24.0, 24.0, 24.0, 24.0, 24.0, 24.0, 24.0, 24.0]  </p> <p>Depends directly on:  </p> <ul> <li>Hourly energy consumed by on premise server instances</li> <li>Average carbon intensity of on premise server electricity </li> </ul> <p>through the following calculations:  </p> <p>You can also visit the link to Hourly on premise server energy footprint\u2019s full calculation graph.</p>"},{"location":"Serverless/","title":"Serverless","text":""},{"location":"Serverless/#params","title":"Params","text":""},{"location":"Serverless/#name","title":"name","text":"<p>A human readable description of the object.</p>"},{"location":"Serverless/#carbon_footprint_fabrication","title":"carbon_footprint_fabrication","text":"<p>carbon footprint fabrication of serverless in kilogram.</p>"},{"location":"Serverless/#power","title":"power","text":"<p>power of serverless in watt.</p>"},{"location":"Serverless/#lifespan","title":"lifespan","text":"<p>lifespan of serverless in year.</p>"},{"location":"Serverless/#idle_power","title":"idle_power","text":"<p>idle power of serverless in watt.</p>"},{"location":"Serverless/#ram","title":"ram","text":"<p>ram of serverless in gigabyte.</p>"},{"location":"Serverless/#cpu_cores","title":"cpu_cores","text":"<p>nb cpus cores of serverless in core.</p>"},{"location":"Serverless/#power_usage_effectiveness","title":"power_usage_effectiveness","text":"<p>pue of serverless in dimensionless.</p>"},{"location":"Serverless/#average_carbon_intensity","title":"average_carbon_intensity","text":"<p>average carbon intensity of serverless electricity in gram / kilowatt_hour.</p>"},{"location":"Serverless/#server_utilization_rate","title":"server_utilization_rate","text":"<p>serverless utilization rate in dimensionless.</p>"},{"location":"Serverless/#backwards-links","title":"Backwards links","text":"<ul> <li>Service</li> </ul>"},{"location":"Serverless/#calculated-attributes","title":"Calculated attributes","text":""},{"location":"Serverless/#available_ram_per_instance","title":"available_ram_per_instance","text":"<p>ExplainableQuantity in gigabyte, representing the available ram per serverless instance.  </p> <p>Example value: 114.9 gigabyte  </p> <p>Depends directly on:  </p> <ul> <li>RAM of serverless</li> <li>serverless utilization rate</li> <li>Base RAM consumption of service </li> </ul> <p>through the following calculations:  </p> <p>You can also visit the link to Available RAM per serverless instance\u2019s full calculation graph.</p>"},{"location":"Serverless/#available_cpu_per_instance","title":"available_cpu_per_instance","text":"<p>ExplainableQuantity in core, representing the available cpu per serverless instance.  </p> <p>Example value: 19.6 core  </p> <p>Depends directly on:  </p> <ul> <li>Nb cpus cores of serverless</li> <li>serverless utilization rate</li> <li>Base CPU consumption of service </li> </ul> <p>through the following calculations:  </p> <p>You can also visit the link to Available CPU per serverless instance\u2019s full calculation graph.</p>"},{"location":"Serverless/#all_services_cpu_needs","title":"all_services_cpu_needs","text":"<p>cpu needs of all services running on serverless in core.  </p> <p>Example value: 26281 values from 2024-12-31 22:00:00 to 2027-12-31 22:00:00 in core:     first 10 vals [0.4, 0.27, 0.07, 0.33, 0.2, 0.27, 0.53, 0.07, 0.6, 0.6],     last 10 vals [0.33, 0.33, 0.07, 0.6, 0.33, 0.27, 0.13, 0.4, 0.27, 0.6]  </p> <p>Depends directly on:  </p> <ul> <li>service hour by hour cpu need </li> </ul> <p>through the following calculations:  </p> <p>You can also visit the link to CPU needs of all services running on serverless\u2019s full calculation graph.</p>"},{"location":"Serverless/#all_services_ram_needs","title":"all_services_ram_needs","text":"<p>ram needs of all services running on serverless in gigabyte.  </p> <p>Example value: 26281 values from 2024-12-31 22:00:00 to 2027-12-31 22:00:00 in GB:     first 10 vals [0.02, 0.01, 0.0, 0.02, 0.01, 0.01, 0.03, 0.0, 0.03, 0.03],     last 10 vals [0.02, 0.02, 0.0, 0.03, 0.02, 0.01, 0.01, 0.02, 0.01, 0.03]  </p> <p>Depends directly on:  </p> <ul> <li>service hour by hour ram need </li> </ul> <p>through the following calculations:  </p> <p>You can also visit the link to RAM needs of all services running on serverless\u2019s full calculation graph.</p>"},{"location":"Serverless/#raw_nb_of_instances","title":"raw_nb_of_instances","text":"<p>hourly raw number of serverless instances in dimensionless.  </p> <p>Example value: 26281 values from 2024-12-31 22:00:00 to 2027-12-31 22:00:00 in dimensionless:     first 10 vals [0.02, 0.01, 0.0, 0.02, 0.01, 0.01, 0.03, 0.0, 0.03, 0.03],     last 10 vals [0.02, 0.02, 0.0, 0.03, 0.02, 0.01, 0.01, 0.02, 0.01, 0.03]  </p> <p>Depends directly on:  </p> <ul> <li>RAM needs of all services running on serverless</li> <li>Available RAM per serverless instance</li> <li>CPU needs of all services running on serverless</li> <li>Available CPU per serverless instance </li> </ul> <p>through the following calculations:  </p> <p>You can also visit the link to Hourly raw number of serverless instances\u2019s full calculation graph.</p>"},{"location":"Serverless/#nb_of_instances","title":"nb_of_instances","text":"<p>hour number of serverless instances in dimensionless.  </p> <p>Example value: 26281 values from 2024-12-31 22:00:00 to 2027-12-31 22:00:00 in dimensionless:     first 10 vals [0.02, 0.01, 0.0, 0.02, 0.01, 0.01, 0.03, 0.0, 0.03, 0.03],     last 10 vals [0.02, 0.02, 0.0, 0.03, 0.02, 0.01, 0.01, 0.02, 0.01, 0.03]  </p> <p>Depends directly on:  </p> <ul> <li>Hourly raw number of serverless instances </li> </ul> <p>through the following calculations:  </p> <p>You can also visit the link to Hour number of serverless instances\u2019s full calculation graph.</p>"},{"location":"Serverless/#instances_fabrication_footprint","title":"instances_fabrication_footprint","text":"<p>hourly serverless instances fabrication footprint in kilogram.  </p> <p>Example value: 26281 values from 2024-12-31 22:00:00 to 2027-12-31 22:00:00 in kg:     first 10 vals [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0],     last 10 vals [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]  </p> <p>Depends directly on:  </p> <ul> <li>Hour number of serverless instances</li> <li>Carbon footprint fabrication of serverless</li> <li>Lifespan of serverless </li> </ul> <p>through the following calculations:  </p> <p>You can also visit the link to Hourly serverless instances fabrication footprint\u2019s full calculation graph.</p>"},{"location":"Serverless/#instances_energy","title":"instances_energy","text":"<p>hourly energy consumed by serverless instances in kilowatt_hour.  </p> <p>Example value: 26281 values from 2024-12-31 22:00:00 to 2027-12-31 22:00:00 in kWh:     first 10 vals [0.01, 0.0, 0.0, 0.01, 0.0, 0.0, 0.01, 0.0, 0.01, 0.01],     last 10 vals [0.01, 0.01, 0.0, 0.01, 0.01, 0.0, 0.0, 0.01, 0.0, 0.01]  </p> <p>Depends directly on:  </p> <ul> <li>Hour number of serverless instances</li> <li>Idle power of serverless</li> <li>PUE of serverless</li> <li>Hourly raw number of serverless instances</li> <li>Power of serverless </li> </ul> <p>through the following calculations:  </p> <p>You can also visit the link to Hourly energy consumed by serverless instances\u2019s full calculation graph.</p>"},{"location":"Serverless/#energy_footprint","title":"energy_footprint","text":"<p>hourly serverless energy footprint in kilogram.  </p> <p>Example value: 26281 values from 2024-12-31 22:00:00 to 2027-12-31 22:00:00 in kg:     first 10 vals [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0],     last 10 vals [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]  </p> <p>Depends directly on:  </p> <ul> <li>Hourly energy consumed by serverless instances</li> <li>Average carbon intensity of serverless electricity </li> </ul> <p>through the following calculations:  </p> <p>You can also visit the link to Hourly serverless energy footprint\u2019s full calculation graph.</p>"},{"location":"Service/","title":"Service","text":""},{"location":"Service/#params","title":"Params","text":""},{"location":"Service/#name","title":"name","text":"<p>A human readable description of the object.</p>"},{"location":"Service/#server","title":"server","text":"<p>An instance of Autoscaling.</p>"},{"location":"Service/#storage","title":"storage","text":"<p>An instance of Storage.</p>"},{"location":"Service/#base_ram_consumption","title":"base_ram_consumption","text":"<p>base ram consumption of service in megabyte.</p>"},{"location":"Service/#base_cpu_consumption","title":"base_cpu_consumption","text":"<p>base cpu consumption of service in core.</p>"},{"location":"Service/#backwards-links","title":"Backwards links","text":"<ul> <li>Job</li> </ul>"},{"location":"Service/#calculated-attributes","title":"Calculated attributes","text":""},{"location":"Service/#hour_by_hour_ram_need","title":"hour_by_hour_ram_need","text":"<p>service hour by hour ram need in gigabyte.  </p> <p>Example value: 26281 values from 2024-12-31 22:00:00 to 2027-12-31 22:00:00 in GB:     first 10 vals [0.02, 0.01, 0.0, 0.02, 0.01, 0.01, 0.03, 0.0, 0.03, 0.03],     last 10 vals [0.02, 0.02, 0.0, 0.03, 0.02, 0.01, 0.01, 0.02, 0.01, 0.03]  </p> <p>Depends directly on:  </p> <ul> <li>Hourly streaming average occurrences across usage patterns</li> <li>RAM needed on server server to process streaming </li> </ul> <p>through the following calculations:  </p> <p>You can also visit the link to service hour by hour ram need\u2019s full calculation graph.</p>"},{"location":"Service/#hour_by_hour_cpu_need","title":"hour_by_hour_cpu_need","text":"<p>service hour by hour cpu need in core.  </p> <p>Example value: 26281 values from 2024-12-31 22:00:00 to 2027-12-31 22:00:00 in core:     first 10 vals [0.4, 0.27, 0.07, 0.33, 0.2, 0.27, 0.53, 0.07, 0.6, 0.6],     last 10 vals [0.33, 0.33, 0.07, 0.6, 0.33, 0.27, 0.13, 0.4, 0.27, 0.6]  </p> <p>Depends directly on:  </p> <ul> <li>Hourly streaming average occurrences across usage patterns</li> <li>CPU needed on server server to process streaming </li> </ul> <p>through the following calculations:  </p> <p>You can also visit the link to service hour by hour cpu need\u2019s full calculation graph.</p>"},{"location":"Service/#storage_needed","title":"storage_needed","text":"<p>hourly service storage need in terabyte.  </p> <p>Example value: 26281 values from 2024-12-31 22:00:00 to 2027-12-31 22:00:00 in TB:     first 10 vals [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0],     last 10 vals [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]  </p> <p>Depends directly on:  </p> <ul> <li>Hourly streaming data upload across usage patterns </li> </ul> <p>through the following calculations:  </p> <p>You can also visit the link to Hourly service storage need\u2019s full calculation graph.</p>"},{"location":"Storage/","title":"Storage","text":""},{"location":"Storage/#params","title":"Params","text":""},{"location":"Storage/#name","title":"name","text":"<p>A human readable description of the object.</p>"},{"location":"Storage/#carbon_footprint_fabrication","title":"carbon_footprint_fabrication","text":"<p>carbon footprint fabrication of storage in kilogram.</p>"},{"location":"Storage/#power","title":"power","text":"<p>power of storage in watt.</p>"},{"location":"Storage/#lifespan","title":"lifespan","text":"<p>lifespan of storage in year.</p>"},{"location":"Storage/#idle_power","title":"idle_power","text":"<p>idle power of storage in watt.</p>"},{"location":"Storage/#storage_capacity","title":"storage_capacity","text":"<p>storage capacity of storage in terabyte.</p>"},{"location":"Storage/#power_usage_effectiveness","title":"power_usage_effectiveness","text":"<p>pue of storage in dimensionless.</p>"},{"location":"Storage/#average_carbon_intensity","title":"average_carbon_intensity","text":"<p>average carbon intensity of storage electricity in gram / kilowatt_hour.</p>"},{"location":"Storage/#data_replication_factor","title":"data_replication_factor","text":"<p>data replication factor of storage in dimensionless.</p>"},{"location":"Storage/#data_storage_duration","title":"data_storage_duration","text":"<p>data storage duration of storage in hour.</p>"},{"location":"Storage/#base_storage_need","title":"base_storage_need","text":"<p>storage initial storage need in terabyte.</p>"},{"location":"Storage/#backwards-links","title":"Backwards links","text":"<ul> <li>Service</li> </ul>"},{"location":"Storage/#calculated-attributes","title":"Calculated attributes","text":""},{"location":"Storage/#all_services_storage_needs","title":"all_services_storage_needs","text":"<p>storage need of storage in terabyte.  </p> <p>Example value: 26281 values from 2024-12-31 22:00:00 to 2027-12-31 22:00:00 in TB:     first 10 vals [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0],     last 10 vals [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]  </p> <p>Depends directly on:  </p> <ul> <li>Hourly service storage need</li> <li>Data replication factor of storage </li> </ul> <p>through the following calculations:  </p> <p>You can also visit the link to Storage need of storage\u2019s full calculation graph.</p>"},{"location":"Storage/#storage_dumps","title":"storage_dumps","text":"<p>storage dumps for storage in terabyte.  </p> <p>Example value: 8749 values from 2027-01-01 10:00:00 to 2027-12-31 22:00:00 in TB:     first 10 vals [-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0],     last 10 vals [-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]  </p> <p>Depends directly on:  </p> <ul> <li>Storage need of storage</li> <li>Data storage duration of storage </li> </ul> <p>through the following calculations:  </p> <p>You can also visit the link to Storage dumps for storage\u2019s full calculation graph.</p>"},{"location":"Storage/#storage_delta","title":"storage_delta","text":"<p>hourly storage delta for storage in terabyte.  </p> <p>Example value: 26281 values from 2024-12-31 22:00:00 to 2027-12-31 22:00:00 in TB:     first 10 vals [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0],     last 10 vals [0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0]  </p> <p>Depends directly on:  </p> <ul> <li>Storage need of storage</li> <li>Storage dumps for storage </li> </ul> <p>through the following calculations:  </p> <p>You can also visit the link to Hourly storage delta for storage\u2019s full calculation graph.</p>"},{"location":"Storage/#full_cumulative_storage_need","title":"full_cumulative_storage_need","text":"<p>full cumulative storage need for storage in terabyte.  </p> <p>Example value: 26281 values from 2024-12-31 22:00:00 to 2027-12-31 22:00:00 in TB:     first 10 vals [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0],     last 10 vals [0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01]  </p> <p>Depends directly on:  </p> <ul> <li>Hourly storage delta for storage</li> <li>storage initial storage need </li> </ul> <p>through the following calculations:  </p> <p>You can also visit the link to Full cumulative storage need for storage\u2019s full calculation graph.</p>"},{"location":"Storage/#nb_of_active_instances","title":"nb_of_active_instances","text":"<p>hourly number of active instances for storage in dimensionless.  </p> <p>Example value: 26281 values from 2024-12-31 22:00:00 to 2027-12-31 22:00:00 in dimensionless:     first 10 vals [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0],     last 10 vals [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]  </p> <p>Depends directly on:  </p> <ul> <li>Hourly storage delta for storage</li> <li>Storage dumps for storage</li> <li>Storage capacity of storage </li> </ul> <p>through the following calculations:  </p> <p>You can also visit the link to Hourly number of active instances for storage\u2019s full calculation graph.</p>"},{"location":"Storage/#all_services_cpu_needs","title":"all_services_cpu_needs","text":"<p>cpu needs of all services running on storage in core.  </p> <p>Example value: 26281 values from 2024-12-31 22:00:00 to 2027-12-31 22:00:00 in core:     first 10 vals [0.4, 0.27, 0.07, 0.33, 0.2, 0.27, 0.53, 0.07, 0.6, 0.6],     last 10 vals [0.33, 0.33, 0.07, 0.6, 0.33, 0.27, 0.13, 0.4, 0.27, 0.6]  </p> <p>Depends directly on:  </p> <ul> <li>service hour by hour cpu need </li> </ul> <p>through the following calculations:  </p> <p>You can also visit the link to CPU needs of all services running on storage\u2019s full calculation graph.</p>"},{"location":"Storage/#all_services_ram_needs","title":"all_services_ram_needs","text":"<p>ram needs of all services running on storage in gigabyte.  </p> <p>Example value: 26281 values from 2024-12-31 22:00:00 to 2027-12-31 22:00:00 in GB:     first 10 vals [0.02, 0.01, 0.0, 0.02, 0.01, 0.01, 0.03, 0.0, 0.03, 0.03],     last 10 vals [0.02, 0.02, 0.0, 0.03, 0.02, 0.01, 0.01, 0.02, 0.01, 0.03]  </p> <p>Depends directly on:  </p> <ul> <li>service hour by hour ram need </li> </ul> <p>through the following calculations:  </p> <p>You can also visit the link to RAM needs of all services running on storage\u2019s full calculation graph.</p>"},{"location":"Storage/#raw_nb_of_instances","title":"raw_nb_of_instances","text":"<p>hourly raw number of instances for storage in dimensionless.  </p> <p>Example value: 26281 values from 2024-12-31 22:00:00 to 2027-12-31 22:00:00 in dimensionless:     first 10 vals [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0],     last 10 vals [0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01]  </p> <p>Depends directly on:  </p> <ul> <li>Full cumulative storage need for storage</li> <li>Storage capacity of storage </li> </ul> <p>through the following calculations:  </p> <p>You can also visit the link to Hourly raw number of instances for storage\u2019s full calculation graph.</p>"},{"location":"Storage/#nb_of_instances","title":"nb_of_instances","text":"<p>hourly number of instances for storage in dimensionless.  </p> <p>Example value: 26281 values from 2024-12-31 22:00:00 to 2027-12-31 22:00:00 in dimensionless:     first 10 vals [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0],     last 10 vals [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]  </p> <p>Depends directly on:  </p> <ul> <li>Hourly raw number of instances for storage </li> </ul> <p>through the following calculations:  </p> <p>You can also visit the link to Hourly number of instances for storage\u2019s full calculation graph.</p>"},{"location":"Storage/#instances_fabrication_footprint","title":"instances_fabrication_footprint","text":"<p>hourly storage instances fabrication footprint in kilogram.  </p> <p>Example value: 26281 values from 2024-12-31 22:00:00 to 2027-12-31 22:00:00 in kg:     first 10 vals [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0],     last 10 vals [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]  </p> <p>Depends directly on:  </p> <ul> <li>Hourly number of instances for storage</li> <li>Carbon footprint fabrication of storage</li> <li>Lifespan of storage </li> </ul> <p>through the following calculations:  </p> <p>You can also visit the link to Hourly storage instances fabrication footprint\u2019s full calculation graph.</p>"},{"location":"Storage/#instances_energy","title":"instances_energy","text":"<p>storage energy for storage in hour * watt.  </p> <p>Example value: 26281 values from 2024-12-31 22:00:00 to 2027-12-31 22:00:00 in W * h:     first 10 vals [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0],     last 10 vals [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]  </p> <p>Depends directly on:  </p> <ul> <li>Hourly number of active instances for storage</li> <li>Power of storage</li> <li>PUE of storage</li> <li>Hourly number of instances for storage</li> <li>Idle power of storage </li> </ul> <p>through the following calculations:  </p> <p>You can also visit the link to Storage energy for storage\u2019s full calculation graph.</p>"},{"location":"Storage/#energy_footprint","title":"energy_footprint","text":"<p>hourly storage energy footprint in kilogram.  </p> <p>Example value: 26281 values from 2024-12-31 22:00:00 to 2027-12-31 22:00:00 in kg:     first 10 vals [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0],     last 10 vals [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]  </p> <p>Depends directly on:  </p> <ul> <li>Storage energy for storage</li> <li>Average carbon intensity of storage electricity </li> </ul> <p>through the following calculations:  </p> <p>You can also visit the link to Hourly storage energy footprint\u2019s full calculation graph.</p>"},{"location":"System/","title":"System","text":""},{"location":"System/#params","title":"Params","text":""},{"location":"System/#name","title":"name","text":"<p>A human readable description of the object.</p>"},{"location":"System/#usage_patterns","title":"usage_patterns","text":"<p>A list of UsagePatterns.</p>"},{"location":"System/#backwards-links","title":"Backwards links","text":""},{"location":"System/#calculated-attributes","title":"Calculated attributes","text":""},{"location":"UsagePattern/","title":"UsagePattern","text":""},{"location":"UsagePattern/#params","title":"Params","text":""},{"location":"UsagePattern/#name","title":"name","text":"<p>A human readable description of the object.</p>"},{"location":"UsagePattern/#user_journey","title":"user_journey","text":"<p>An instance of UserJourney.</p>"},{"location":"UsagePattern/#devices","title":"devices","text":"<p>A list of Hardwares.</p>"},{"location":"UsagePattern/#network","title":"network","text":"<p>An instance of Network.</p>"},{"location":"UsagePattern/#country","title":"country","text":"<p>An instance of Country.</p>"},{"location":"UsagePattern/#hourly_user_journey_starts","title":"hourly_user_journey_starts","text":"<p>description to be done</p>"},{"location":"UsagePattern/#backwards-links","title":"Backwards links","text":"<ul> <li>System</li> </ul>"},{"location":"UsagePattern/#calculated-attributes","title":"Calculated attributes","text":""},{"location":"UsagePattern/#utc_hourly_user_journey_starts","title":"utc_hourly_user_journey_starts","text":"<p>usage pattern utc in dimensionless.  </p> <p>Example value: 26281 values from 2024-12-31 22:00:00 to 2027-12-31 22:00:00 in dimensionless:     first 10 vals [6, 4, 1, 5, 3, 4, 8, 1, 9, 9],     last 10 vals [5, 5, 1, 9, 5, 4, 2, 6, 4, 9]  </p> <p>Depends directly on:  </p> <ul> <li>usage pattern hourly nb of visits from hypothesis</li> <li>devices country timezone from user data </li> </ul> <p>through the following calculations:  </p> <p>You can also visit the link to usage pattern UTC\u2019s full calculation graph.</p>"},{"location":"UsagePattern/#nb_user_journeys_in_parallel","title":"nb_user_journeys_in_parallel","text":"<p>usage pattern hourly nb of user journeys in parallel in dimensionless.  </p> <p>Example value: 26281 values from 2024-12-31 22:00:00 to 2027-12-31 22:00:00 in dimensionless:     first 10 vals [2.0, 1.33, 0.33, 1.67, 1.0, 1.33, 2.67, 0.33, 3.0, 3.0],     last 10 vals [1.67, 1.67, 0.33, 3.0, 1.67, 1.33, 0.67, 2.0, 1.33, 3.0]  </p> <p>Depends directly on:  </p> <ul> <li>usage pattern UTC</li> <li>Duration of user journey </li> </ul> <p>through the following calculations:  </p> <p>You can also visit the link to usage pattern hourly nb of user journeys in parallel\u2019s full calculation graph.</p>"},{"location":"UsagePattern/#devices_energy","title":"devices_energy","text":"<p>energy consumed by usage pattern devices in kilowatt_hour.  </p> <p>Example value: 26281 values from 2024-12-31 22:00:00 to 2027-12-31 22:00:00 in kWh:     first 10 vals [0.1, 0.07, 0.02, 0.08, 0.05, 0.07, 0.13, 0.02, 0.15, 0.15],     last 10 vals [0.08, 0.08, 0.02, 0.15, 0.08, 0.07, 0.03, 0.1, 0.07, 0.15]  </p> <p>Depends directly on:  </p> <ul> <li>usage pattern hourly nb of user journeys in parallel</li> <li>Power of device on which the user journey is made </li> </ul> <p>through the following calculations:  </p> <p>You can also visit the link to Energy consumed by usage pattern devices\u2019s full calculation graph.</p>"},{"location":"UsagePattern/#devices_energy_footprint","title":"devices_energy_footprint","text":"<p>energy footprint of usage pattern in kilogram.  </p> <p>Example value: 26281 values from 2024-12-31 22:00:00 to 2027-12-31 22:00:00 in kg:     first 10 vals [0.01, 0.01, 0.0, 0.01, 0.0, 0.01, 0.01, 0.0, 0.01, 0.01],     last 10 vals [0.01, 0.01, 0.0, 0.01, 0.01, 0.01, 0.0, 0.01, 0.01, 0.01]  </p> <p>Depends directly on:  </p> <ul> <li>Energy consumed by usage pattern devices</li> <li>Average carbon intensity of devices country </li> </ul> <p>through the following calculations:  </p> <p>You can also visit the link to Energy footprint of usage pattern\u2019s full calculation graph.</p>"},{"location":"UsagePattern/#devices_fabrication_footprint","title":"devices_fabrication_footprint","text":"<p>devices fabrication footprint of usage pattern in kilogram.  </p> <p>Example value: 26281 values from 2024-12-31 22:00:00 to 2027-12-31 22:00:00 in kg:     first 10 vals [0.02, 0.01, 0.0, 0.02, 0.01, 0.01, 0.03, 0.0, 0.03, 0.03],     last 10 vals [0.02, 0.02, 0.0, 0.03, 0.02, 0.01, 0.01, 0.02, 0.01, 0.03]  </p> <p>Depends directly on:  </p> <ul> <li>usage pattern hourly nb of user journeys in parallel</li> <li>Carbon footprint fabrication of device on which the user journey is made</li> <li>Lifespan of device on which the user journey is made</li> <li>device on which the user journey is made fraction of usage time </li> </ul> <p>through the following calculations:  </p> <p>You can also visit the link to Devices fabrication footprint of usage pattern\u2019s full calculation graph.</p>"},{"location":"UsagePattern/#energy_footprint","title":"energy_footprint","text":"<p>usage pattern total energy footprint in kilogram.  </p> <p>Example value: 26281 values from 2024-12-31 22:00:00 to 2027-12-31 22:00:00 in kg:     first 10 vals [0.01, 0.01, 0.0, 0.01, 0.0, 0.01, 0.01, 0.0, 0.01, 0.01],     last 10 vals [0.01, 0.01, 0.0, 0.01, 0.01, 0.01, 0.0, 0.01, 0.01, 0.01]  </p> <p>Depends directly on:  </p> <ul> <li>Energy footprint of usage pattern </li> </ul> <p>through the following calculations:  </p> <p>You can also visit the link to usage pattern total energy footprint\u2019s full calculation graph.</p>"},{"location":"UsagePattern/#instances_fabrication_footprint","title":"instances_fabrication_footprint","text":"<p>usage pattern total fabrication footprint in kilogram.  </p> <p>Example value: 26281 values from 2024-12-31 22:00:00 to 2027-12-31 22:00:00 in kg:     first 10 vals [0.02, 0.01, 0.0, 0.02, 0.01, 0.01, 0.03, 0.0, 0.03, 0.03],     last 10 vals [0.02, 0.02, 0.0, 0.03, 0.02, 0.01, 0.01, 0.02, 0.01, 0.03]  </p> <p>Depends directly on:  </p> <ul> <li>Devices fabrication footprint of usage pattern </li> </ul> <p>through the following calculations:  </p> <p>You can also visit the link to usage pattern total fabrication footprint\u2019s full calculation graph.</p>"},{"location":"UserJourney/","title":"UserJourney","text":""},{"location":"UserJourney/#params","title":"Params","text":""},{"location":"UserJourney/#name","title":"name","text":"<p>A human readable description of the object.</p>"},{"location":"UserJourney/#uj_steps","title":"uj_steps","text":"<p>A list of UserJourneySteps.</p>"},{"location":"UserJourney/#backwards-links","title":"Backwards links","text":"<ul> <li>UsagePattern</li> </ul>"},{"location":"UserJourney/#calculated-attributes","title":"Calculated attributes","text":""},{"location":"UserJourney/#duration","title":"duration","text":"<p>ExplainableQuantity in hour, representing the duration of user journey.  </p> <p>Example value: 0.33 hour  </p> <p>Depends directly on:  </p> <ul> <li>Time spent on step 20 min streaming </li> </ul> <p>through the following calculations:  </p> <p>You can also visit the link to Duration of user journey\u2019s full calculation graph.</p>"},{"location":"UserJourneyStep/","title":"UserJourneyStep","text":""},{"location":"UserJourneyStep/#params","title":"Params","text":""},{"location":"UserJourneyStep/#name","title":"name","text":"<p>A human readable description of the object.</p>"},{"location":"UserJourneyStep/#user_time_spent","title":"user_time_spent","text":"<p>time spent on step 20 min streaming in minute.</p>"},{"location":"UserJourneyStep/#jobs","title":"jobs","text":"<p>A list of Jobs.</p>"},{"location":"UserJourneyStep/#backwards-links","title":"Backwards links","text":"<ul> <li>UserJourney</li> </ul>"},{"location":"UserJourneyStep/#calculated-attributes","title":"Calculated attributes","text":""},{"location":"best_practices/","title":"What about best practices ?","text":"<p>Best practices shine best when the systems they apply to have little variability. We\u2019ve seen in the Why e-footprint ? article that digital services are highly variable, so starting with a list of best practices to apply puts us at risk of spending efforts on actions that have very little leverage. This doesn\u2019t mean that best practices are useless; rather, they should come in as a resource after a modeling has show where to act.</p>"},{"location":"build_process/","title":"What about the build process of the service ?","text":"<p>Work in progress</p>"},{"location":"builders/","title":"e-footprint builders","text":"<p>e-footprint builders are higher-level functions that allows for the creation of e-footprint objects from fewer parameters than the raw model requires.</p>"},{"location":"builders/#default-builders","title":"Default builders","text":""},{"location":"builders/#devices","title":"Devices","text":"<pre><code>from efootprint.builders.hardware.devices_defaults import default_smartphone, default_laptop, default_box, default_screen\n</code></pre> <pre><code>print(default_smartphone())\n</code></pre> <pre><code>Hardware id-ded0ca-Default-smartphone\n\ncarbon_footprint_fabrication: 30 kilogram\npower: 1 watt\nlifespan: 3 year\nfraction_of_usage_time: 3.6 hour / day\n</code></pre> <pre><code>print(default_laptop())\n</code></pre> <pre><code>Hardware id-251105-Default-laptop\n\ncarbon_footprint_fabrication: 156 kilogram\npower: 50 watt\nlifespan: 6 year\nfraction_of_usage_time: 7.0 hour / day\n</code></pre> <pre><code>print(default_box())\n</code></pre> <pre><code>Hardware id-867598-Default-box\n\ncarbon_footprint_fabrication: 78 kilogram\npower: 10 watt\nlifespan: 6 year\nfraction_of_usage_time: 24.0 hour / day\n</code></pre> <pre><code>print(default_screen())\n</code></pre> <pre><code>Hardware id-626e61-Default-screen\n\ncarbon_footprint_fabrication: 222 kilogram\npower: 30 watt\nlifespan: 6 year\nfraction_of_usage_time: 7.0 hour / day\n</code></pre>"},{"location":"builders/#network","title":"Network","text":"<pre><code>from efootprint.builders.hardware.network_defaults import default_mobile_network, default_wifi_network\n</code></pre> <pre><code>print(default_mobile_network())\n</code></pre> <pre><code>Network id-530c27-Default-mobile-network\n\nbandwidth_energy_intensity: 0.12 kilowatt_hour / gigabyte\n\ncalculated_attributes:\n  energy_footprint: None\n</code></pre> <pre><code>print(default_wifi_network())\n</code></pre> <pre><code>Network id-e9d39c-Default-wifi-network\n\nbandwidth_energy_intensity: 0.05 kilowatt_hour / gigabyte\n\ncalculated_attributes:\n  energy_footprint: None\n</code></pre>"},{"location":"builders/#servers","title":"Servers","text":"<p>Different server types have same default attributes but their calculated attributes logic will be different.</p> <pre><code>from efootprint.builders.hardware.servers_defaults import default_autoscaling, default_serverless, default_onpremise\n</code></pre> <pre><code>print(default_autoscaling())\n</code></pre> <pre><code>Autoscaling id-038a89-Default-autoscaling\n\ncarbon_footprint_fabrication: 600 kilogram\npower: 300 watt\nlifespan: 6 year\nfraction_of_usage_time: 1 dimensionless\naverage_carbon_intensity: 100.0 gram / kilowatt_hour\nserver_utilization_rate: 0.9 dimensionless\nidle_power: 50 watt\nram: 128 gigabyte\ncpu_cores: 24 core\npower_usage_effectiveness: 1.2 dimensionless\n\ncalculated_attributes:\n  available_ram_per_instance: None\n  available_cpu_per_instance: None\n  all_services_cpu_needs: None\n  all_services_ram_needs: None\n  raw_nb_of_instances: None\n  nb_of_instances: None\n  instances_fabrication_footprint: None\n  instances_energy: None\n  energy_footprint: None\n</code></pre> <pre><code>print(default_serverless())\n</code></pre> <pre><code>Serverless id-f84f11-Default-serverless\n\ncarbon_footprint_fabrication: 600 kilogram\npower: 300 watt\nlifespan: 6 year\nfraction_of_usage_time: 1 dimensionless\naverage_carbon_intensity: 100.0 gram / kilowatt_hour\nserver_utilization_rate: 0.9 dimensionless\nidle_power: 50 watt\nram: 128 gigabyte\ncpu_cores: 24 core\npower_usage_effectiveness: 1.2 dimensionless\n\ncalculated_attributes:\n  available_ram_per_instance: None\n  available_cpu_per_instance: None\n  all_services_cpu_needs: None\n  all_services_ram_needs: None\n  raw_nb_of_instances: None\n  nb_of_instances: None\n  instances_fabrication_footprint: None\n  instances_energy: None\n  energy_footprint: None\n</code></pre> <pre><code>print(default_onpremise())\n</code></pre> <pre><code>OnPremise id-0f7376-Default-on-premise\n\ncarbon_footprint_fabrication: 600 kilogram\npower: 300 watt\nlifespan: 6 year\nfraction_of_usage_time: 1 dimensionless\naverage_carbon_intensity: 100.0 gram / kilowatt_hour\nserver_utilization_rate: 0.9 dimensionless\nidle_power: 50 watt\nram: 128 gigabyte\ncpu_cores: 24 core\npower_usage_effectiveness: 1.2 dimensionless\nfixed_nb_of_instances: None\n\ncalculated_attributes:\n  available_ram_per_instance: None\n  available_cpu_per_instance: None\n  all_services_cpu_needs: None\n  all_services_ram_needs: None\n  raw_nb_of_instances: None\n  nb_of_instances: None\n  instances_fabrication_footprint: None\n  instances_energy: None\n  energy_footprint: None\n</code></pre>"},{"location":"builders/#storage","title":"Storage","text":"<pre><code>from efootprint.builders.hardware.storage_defaults import default_hdd, default_ssd\n</code></pre> <pre><code>print(default_hdd())\n</code></pre> <pre><code>Storage id-1f077f-Default-HDD-storage\n\ncarbon_footprint_fabrication: 20 kilogram\npower: 4.2 watt\nlifespan: 4 year\nfraction_of_usage_time: 1 dimensionless\naverage_carbon_intensity: 100.0 gram / kilowatt_hour\nlong_term_storage_required: None\ninstances_power: None\nidle_power: 0 watt\nstorage_capacity: 1 terabyte\npower_usage_effectiveness: 1.2 dimensionless\ndata_replication_factor: 3 dimensionless\ndata_storage_duration: 5 year\nbase_storage_need: 0 terabyte\n\ncalculated_attributes:\n  all_services_storage_needs: None\n  storage_dumps: None\n  storage_delta: None\n  full_cumulative_storage_need: None\n  nb_of_active_instances: None\n  all_services_cpu_needs: None\n  all_services_ram_needs: None\n  raw_nb_of_instances: None\n  nb_of_instances: None\n  instances_fabrication_footprint: None\n  instances_energy: None\n  energy_footprint: None\n</code></pre> <pre><code>print(default_ssd())\n</code></pre> <pre><code>Storage id-b64333-Default-SSD-storage\n\ncarbon_footprint_fabrication: 160 kilogram\npower: 1.3 watt\nlifespan: 6 year\nfraction_of_usage_time: 1 dimensionless\naverage_carbon_intensity: 100.0 gram / kilowatt_hour\nlong_term_storage_required: None\ninstances_power: None\nidle_power: 0 watt\nstorage_capacity: 1 terabyte\npower_usage_effectiveness: 1.2 dimensionless\ndata_replication_factor: 3 dimensionless\ndata_storage_duration: 5 year\nbase_storage_need: 0 terabyte\n\ncalculated_attributes:\n  all_services_storage_needs: None\n  storage_dumps: None\n  storage_delta: None\n  full_cumulative_storage_need: None\n  nb_of_active_instances: None\n  all_services_cpu_needs: None\n  all_services_ram_needs: None\n  raw_nb_of_instances: None\n  nb_of_instances: None\n  instances_fabrication_footprint: None\n  instances_energy: None\n  energy_footprint: None\n</code></pre>"},{"location":"builders/#overwriting-default-builders-attributes","title":"Overwriting default builders attributes","text":"<p>Any default builder attribute can be overwritten, for example:</p> <pre><code>from efootprint.abstract_modeling_classes.source_objects import SourceValue\nfrom efootprint.constants.units import u\n\nprint(default_ssd(\"My custom default SSD with higher carbon intensity\", average_carbon_intensity=SourceValue(300 * u.g / u.kWh)))\n</code></pre> <pre><code>Storage id-83e273-My-custom-default-SSD-with-higher-carbon-intensity\n\ncarbon_footprint_fabrication: 160 kilogram\npower: 1.3 watt\nlifespan: 6 year\nfraction_of_usage_time: 1 dimensionless\naverage_carbon_intensity: 300.0 gram / kilowatt_hour\nlong_term_storage_required: None\ninstances_power: None\nidle_power: 0 watt\nstorage_capacity: 1 terabyte\npower_usage_effectiveness: 1.2 dimensionless\ndata_replication_factor: 3 dimensionless\ndata_storage_duration: 5 year\nbase_storage_need: 0 terabyte\n\ncalculated_attributes:\n  all_services_storage_needs: None\n  storage_dumps: None\n  storage_delta: None\n  full_cumulative_storage_need: None\n  nb_of_active_instances: None\n  all_services_cpu_needs: None\n  all_services_ram_needs: None\n  raw_nb_of_instances: None\n  nb_of_instances: None\n  instances_fabrication_footprint: None\n  instances_energy: None\n  energy_footprint: None\n</code></pre>"},{"location":"builders/#boaviztapi-builders","title":"BoaviztAPI builders","text":"<p>These builders make use of Boavizta\u2019s API to create objects with their full technical characteristics from fewer information like server name and cloud provider.</p>"},{"location":"builders/#boaviztapi-server-builders","title":"BoaviztAPI server builders","text":""},{"location":"builders/#cloud-server-from-cloud-provider-and-server-name","title":"Cloud server from cloud provider and server name","text":"<pre><code>from efootprint.builders.hardware.servers_boaviztapi import get_cloud_server\n</code></pre> <pre><code>print(get_cloud_server(\"aws\", \"m5.xlarge\", SourceValue(100 * u.g / u.kWh)))\n</code></pre> <pre><code>Autoscaling id-0a04a7-aws-m52exlarge-instances\n\ncarbon_footprint_fabrication: 48.0 kilogram\npower: 25.94 watt\nlifespan: 6 year\nfraction_of_usage_time: 1 dimensionless\naverage_carbon_intensity: 100.0 gram / kilowatt_hour\nserver_utilization_rate: 0.9 dimensionless\nidle_power: 0 watt\nram: 384.0 gigabyte\ncpu_cores: 48.0 core\npower_usage_effectiveness: 1.2 dimensionless\n\ncalculated_attributes:\n  available_ram_per_instance: None\n  available_cpu_per_instance: None\n  all_services_cpu_needs: None\n  all_services_ram_needs: None\n  raw_nb_of_instances: None\n  nb_of_instances: None\n  instances_fabrication_footprint: None\n  instances_energy: None\n  energy_footprint: None\n</code></pre> <pre><code># The server type can be changed, as well as lifespan, idle_power, power_usage_effectiveness and server_utilization_rate\nfrom efootprint.core.hardware.servers.serverless import Serverless\n\nprint(get_cloud_server(\n    \"aws\", \"m5.xlarge\", SourceValue(100 * u.g / u.kWh), base_efootprint_class=Serverless, lifespan=SourceValue(7 * u.year)))\n</code></pre> <pre><code>Serverless id-f7f713-aws-m52exlarge-instances\n\ncarbon_footprint_fabrication: 48.0 kilogram\npower: 25.94 watt\nlifespan: 7 year\nfraction_of_usage_time: 1 dimensionless\naverage_carbon_intensity: 100.0 gram / kilowatt_hour\nserver_utilization_rate: 0.9 dimensionless\nidle_power: 0 watt\nram: 384.0 gigabyte\ncpu_cores: 48.0 core\npower_usage_effectiveness: 1.2 dimensionless\n\ncalculated_attributes:\n  available_ram_per_instance: None\n  available_cpu_per_instance: None\n  all_services_cpu_needs: None\n  all_services_ram_needs: None\n  raw_nb_of_instances: None\n  nb_of_instances: None\n  instances_fabrication_footprint: None\n  instances_energy: None\n  energy_footprint: None\n</code></pre>"},{"location":"builders/#on-premise-server-from-config","title":"On premise server from config","text":"<pre><code>from efootprint.builders.hardware.servers_boaviztapi import on_premise_server_from_config\n</code></pre> <pre><code>print(on_premise_server_from_config(\n    \"My server\", nb_of_cpu_units=2, nb_of_cores_per_cpu_unit=24,nb_of_ram_units=6,\n    ram_quantity_per_unit_in_gb=16, average_carbon_intensity=SourceValue(100 * u.g / u.kWh)))\n</code></pre> <pre><code>OnPremise id-bacd56-My-server\n\ncarbon_footprint_fabrication: 670.0 kilogram\npower: 520.99 watt\nlifespan: 6 year\nfraction_of_usage_time: 1 dimensionless\naverage_carbon_intensity: 100.0 gram / kilowatt_hour\nserver_utilization_rate: 0.7 dimensionless\nidle_power: 0 watt\nram: 96 gigabyte\ncpu_cores: 48 core\npower_usage_effectiveness: 1.4 dimensionless\nfixed_nb_of_instances: None\n\ncalculated_attributes:\n  available_ram_per_instance: None\n  available_cpu_per_instance: None\n  all_services_cpu_needs: None\n  all_services_ram_needs: None\n  raw_nb_of_instances: None\n  nb_of_instances: None\n  instances_fabrication_footprint: None\n  instances_energy: None\n  energy_footprint: None\n</code></pre>"},{"location":"builders/#job-builder-from-boaviztas-ecobenchmark-data","title":"Job builder from Boavizta\u2019s ecobenchmark data","text":"<pre><code>from efootprint.builders.usage.job_ecobenchmark.ecobenchmark_job_builder import ecobenchmark_job\nfrom efootprint.core.service import Service\n\nserver = default_autoscaling()\nstorage = default_ssd()\nservice = Service(\"test service\", server, storage, base_ram_consumption=SourceValue(1 * u.MB))\njob = ecobenchmark_job(\n    \"test job\", service, data_upload=SourceValue(1 * u.MB), data_download=SourceValue(1 * u.MB),\n    technology='php-symfony')\n\nprint(job)\n</code></pre> <pre><code>2024-09-12 15:44:13,398 - INFO - File /ecobenchmark_results__raw.csv already exists, we do not overwrite it\n\n\nJob id-38bded-test-job\n\njob_type: undefined\nservice: id-6d32c2-test-service\ndata_upload: 1 megabyte\ndata_download: 1 megabyte\nrequest_duration: 1 second\nram_needed: 6.15 megabyte\ncpu_needed: 0.08 core\ndescription:\n\ncalculated_attributes:\n          hourly_occurrences_across_usage_patterns: None\n  hourly_avg_occurrences_across_usage_patterns: None\n  hourly_data_upload_across_usage_patterns: None\n</code></pre> <pre><code># List of available technologies\nfrom efootprint.builders.usage.job_ecobenchmark.ecobenchmark_job_builder import get_ecobenchmark_technologies\nprint(get_ecobenchmark_technologies())\n</code></pre> <pre><code>['go-pgx', 'jvm-kotlin-spring', 'node-express-sequelize', 'php-symfony', 'rust-actix-sqlx']\n</code></pre> <pre><code>\n</code></pre>"},{"location":"database_modeling/","title":"How to model a database","text":"<p>Work in progress</p>"},{"location":"design_deep_dive/","title":"e-footprint design choices deep dive","text":"<p>Work in progress</p>"},{"location":"efootprint_scope/","title":"e-footprint scope","text":"<p>e-footprint aims at being a digital service carbon footprint modeling tool (more on what is means later). First of all, what is a digital service ? We call digital service any set of information technology tools that allow users to accomplish something, including all hardware, software, and peripheral equipment. In other words, the sum of all digital services makes up the entirety of the digital world. This scope is very large and that\u2019s why e-footprint has taken a detailed low-level approach. This fine granularity is complemented by a library of higher-level builders that allow for the creation of objects with fewer parameters for better usability. Of course some digital services will be harder to model with e-footprint than others, but all can be approximated. Refer to the how-to section for more information on how to model different types of services.</p> <p>Read the Why e-footprint ? article to understand the need for such a tool when ecodesigning a digital service.</p>"},{"location":"evolution_across_time/","title":"How to model the evolution of a system across time","text":"<p>Work in progress</p>"},{"location":"explanation_overview/","title":"Explanation overview","text":"<p>This section is composed of several very useful articles to understand in detail what e-footprint is and how to use it to ecodesign your digital service.</p> <ul> <li>the e-footprint scope article defines digital services and states that it is possible to model any digital service with e-footprint.</li> <li>Why e-footprint ? unfolds the analysis that led to the development of e-footprint.</li> <li>How to get started suggests the identification of an e-footprint owner within any team who wants to ecodesign its service.</li> <li>The e-footprint methodology details the steps in the iterative modeling process.</li> <li>e-footprint design choices deep dive goes into fine details as to why the e-footprint model has been built the way it is.</li> </ul>"},{"location":"get_started/","title":"Get started","text":""},{"location":"get_started/#who-is-e-footprint-for","title":"Who is e-footprint for ?","text":"<p>e-footprint is a tool for teams who want to ecodesign the digital services they develop (for example, a product team in a start up or big company). Even if it is a technical tool, it is not only for the most technical people in the team (architects, devs, data scientists). In fact, the environmental impact of the service is everyone\u2019s responsibility, just as its commercial success is. Moreover, we\u2019ve seen the Why e-footprint ? article that e-footprint also incorporates a user journey and usage language that will speak to tech professionals with a less technical background.</p>"},{"location":"get_started/#team-organization","title":"Team organization","text":"<p>What we recommend is that an e-footprint owner be identified in the team, who will be responsible for the building and maintenance of the modeling by soliciting all team members for their input. If using the python package, this person must have basic python skills, but an interface is underway that will completely remove any need for a technical background to get started with e-footprint. The e-footprint owner can thus be any person from the team, with or without technical background. The only prerequisite is a willingness to gain skill on the understanding and use of the tool.</p> <p>While there is one owner responsible for fully understanding the modeling of the digital service built by the team, when ecodesign decisions are made or when the impact of a new feature is anticipated, the whole team looks at the simulation and makes a collegiate decision.</p> <p>The e-footprint model owner is very much advised to read and understand the e-footprint methodology, why e-footprint has been built, and its model choices.</p>"},{"location":"links/","title":"External links","text":"<ul> <li>article on the use of e-footprint for the analysis of the Paylib service (in French)</li> </ul>"},{"location":"machine_learning_workflow/","title":"How to model a machine learning workflow","text":"<p>Work in progress</p>"},{"location":"measurement_tools/","title":"What about measurement tools ?","text":"<p>Work in progress</p>"},{"location":"methodology/","title":"The e-footprint methodology","text":""},{"location":"methodology/#high-level-modeling-then-refinement","title":"High-level modeling then refinement","text":"<p>Ecodesigning with e-footprint is an iterative process. Since e-footprint is a modeling tool, it is possible (and advised) to start with a very high level modeling of the studied system. This first modeling will be very inaccurate but give useful orders of magnitude: I know that the impact potential of my ecodesign initiative will be much greater if my first modeling shows me 1000 tons of CO2 / year than if it shows only 100 kg / year, and I will size my efforts accordingly. An advantage of this approach is that it doesn\u2019t require the installation of any tool. Then, depending on the results of this first analysis, I have 3 choices:</p> <ul> <li>Stop modeling because my system is too small to justify investing in ecodesigning it.</li> <li>Invest effort to increase the granularity of my modeling because it is not enough to guide decision.</li> <li>Decide that the model is detailed enough to make decisions and got to the next step.</li> </ul>"},{"location":"methodology/#modeling-analysis","title":"Modeling analysis","text":"<p>If the system is big enough, and once the model has been refined enough, comes the analysis time. It consists in diving into the results of the model to understand where emissions come from and what the emission reduction opportunities are. For example, if the analysis shows that much of the impact comes from the network, I can look up the network ecodesign best practices for inspiration, or simply ask the tech team. </p>"},{"location":"methodology/#simulation-and-priorisation","title":"Simulation and priorisation","text":"<p>When ecodesign opportunities or new features are considered, they are implemented as changes to the e-footprint model, e-footprint computes the new impact of the system, and the difference between the old and the new footprint is the environmental return on investment of the action. Since modeling often takes orders of magnitude less time than implementing, this approach allows for an efficient prioritization of effort: you will finally be able to choose the most impactful best practice for your particular conditions !</p>"},{"location":"object_reference/","title":"How to read the object reference","text":"<p>Here is the structure of an e-footprint object page:</p>"},{"location":"object_reference/#object-name","title":"Object name","text":""},{"location":"object_reference/#params","title":"Params","text":"<p>The parameters required for the creation of the Python object. Parameters can be attributes representing a physical or technical property of the object, or another e-footprint object.</p>"},{"location":"object_reference/#backwards-links","title":"Backwards links","text":"<p>The list of objects that have the current object as attribute</p>"},{"location":"object_reference/#calculated-attributes","title":"Calculated attributes","text":"<p>Calculations made by the e-footprint model. For each calculated attribute, its direct parents and related formula are given, as well as a link to its calculation graph representing its full origin.</p>"},{"location":"only_CO2/","title":"Why only CO2 ?","text":"<p>Work in progress</p>"},{"location":"server_to_server_interaction/","title":"How to model server to server interaction","text":"<p>Work in progress</p>"},{"location":"tutorial/","title":"e-footprint quickstart","text":"<p>This notebook provides an example scenario that you can use to get familiar with the Python API of efootprint: the daily video consumption of all French households on a big streaming platform.</p> <p>You will get to describe:</p> <ul> <li>the infrastructure involved (servers with auto-scaling settings, storage, service and network)</li> <li>the user journey involving 2 steps (Streaming, Upload)</li> <li>the usage pattern and the device population that executes it (the laptops of all French households)</li> </ul>"},{"location":"tutorial/#import-the-packages","title":"Import the packages","text":"<p>\u26a0 If this steps fails, remember to run ipython kernel install --user --name=efootprint-kernel inside your python virtual environement (initializable with <code>poetry install</code>) to be able to select efootprint-kernel as the jupyter kernel.</p> <pre><code>import os\n\nfrom efootprint.abstract_modeling_classes.source_objects import SourceValue, Sources, SourceObject\nfrom efootprint.core.usage.user_journey import UserJourney\nfrom efootprint.core.usage.user_journey_step import UserJourneyStep\nfrom efootprint.core.usage.job import Job\nfrom efootprint.core.hardware.servers.autoscaling import Autoscaling\nfrom efootprint.core.hardware.storage import Storage\nfrom efootprint.core.service import Service\nfrom efootprint.core.usage.usage_pattern import UsagePattern\nfrom efootprint.core.hardware.network import Network\nfrom efootprint.core.system import System\nfrom efootprint.constants.countries import Countries\nfrom efootprint.constants.units import u\nfrom efootprint.utils.object_relationships_graphs import USAGE_PATTERN_VIEW_CLASSES_TO_IGNORE\nfrom efootprint.builders.hardware.devices_defaults import default_laptop\n</code></pre>"},{"location":"tutorial/#define-the-infrastructure","title":"Define the infrastructure","text":"<p>An e-footprint object has a name and attributes describing its technical and environmental characteristics:</p> <pre><code>server = Autoscaling(\n    \"server\",\n    carbon_footprint_fabrication=SourceValue(600 * u.kg, Sources.BASE_ADEME_V19),\n    power=SourceValue(300 * u.W, Sources.HYPOTHESIS),\n    lifespan=SourceValue(6 * u.year, Sources.HYPOTHESIS),\n    idle_power=SourceValue(50 * u.W, Sources.HYPOTHESIS),\n    ram=SourceValue(128 * u.GB, Sources.HYPOTHESIS),\n    cpu_cores=SourceValue(24 * u.core, Sources.HYPOTHESIS),\n    power_usage_effectiveness=SourceValue(1.2 * u.dimensionless, Sources.HYPOTHESIS),\n    average_carbon_intensity=SourceValue(100 * u.g / u.kWh, Sources.HYPOTHESIS),\n    server_utilization_rate=SourceValue(0.9 * u.dimensionless, Sources.HYPOTHESIS))\n</code></pre> <p>Moreover, all e-footprint objects have a calculated_attributes attributes that shows the list of attributes that are setup as None and then computed by e-footprint when the modeling is over. For example, for our server:</p> <pre><code>print(server)\n</code></pre> <pre><code>Autoscaling id-7fbf5c-server\n\ncarbon_footprint_fabrication: 600 kilogram\npower: 300 watt\nlifespan: 6 year\nfraction_of_usage_time: 1 dimensionless\naverage_carbon_intensity: 100.0 gram / kilowatt_hour\nserver_utilization_rate: 0.9 dimensionless\nidle_power: 50 watt\nram: 128 gigabyte\ncpu_cores: 24 core\npower_usage_effectiveness: 1.2 dimensionless\n\ncalculated_attributes:\n  available_ram_per_instance: None\n  available_cpu_per_instance: None\n  all_services_cpu_needs: None\n  all_services_ram_needs: None\n  raw_nb_of_instances: None\n  nb_of_instances: None\n  instances_fabrication_footprint: None\n  instances_energy: None\n  energy_footprint: None\n</code></pre> <p>More information on e-footprint objects\u2019 calculated_attributes can be found in the e-footprint documentation.</p> <pre><code>storage = Storage(\n    \"SSD storage\",\n    carbon_footprint_fabrication=SourceValue(160 * u.kg, Sources.STORAGE_EMBODIED_CARBON_STUDY),\n    power=SourceValue(1.3 * u.W, Sources.STORAGE_EMBODIED_CARBON_STUDY),\n    lifespan=SourceValue(6 * u.years, Sources.HYPOTHESIS),\n    idle_power=SourceValue(0 * u.W, Sources.HYPOTHESIS),\n    storage_capacity=SourceValue(1 * u.TB, Sources.STORAGE_EMBODIED_CARBON_STUDY),\n    power_usage_effectiveness=SourceValue(1.2 * u.dimensionless, Sources.HYPOTHESIS),\n    average_carbon_intensity=SourceValue(100 * u.g / u.kWh),\n    data_replication_factor=SourceValue(3 * u.dimensionless, Sources.HYPOTHESIS),\n    data_storage_duration = SourceValue(2 * u.year, Sources.HYPOTHESIS),\n    base_storage_need = SourceValue(100 * u.TB, Sources.HYPOTHESIS)\n    )\n</code></pre> <p>Apart from environmental and technical attributes, e-footprint objects can link to other e-footprint objects. For example, the following service runs on the server and uploads data to the storage:</p> <pre><code>service = Service(\n    \"Streaming platform\",\n    server=server,\n    storage=storage,\n    base_ram_consumption=SourceValue(300 * u.MB, Sources.HYPOTHESIS),\n    base_cpu_consumption=SourceValue(2 * u.core, Sources.HYPOTHESIS))\n</code></pre>"},{"location":"tutorial/#define-the-user-journey","title":"Define the user journey","text":"<p>This is the modeling of the average daily usage of the streaming platform in France:</p> <pre><code>streaming_step = UserJourneyStep(\n    \"20 min streaming\",\n    user_time_spent=SourceValue(20 * u.min, Sources.USER_DATA),\n    jobs=[\n        Job(\n            \"streaming\",\n            service=service,\n            data_upload=SourceValue(0.05 * u.MB, Sources.USER_DATA),\n            data_download=SourceValue(800 * u.MB, Sources.USER_DATA),\n            request_duration=SourceValue(4 * u.min, Sources.HYPOTHESIS),\n            cpu_needed=SourceValue(1 * u.core, Sources.HYPOTHESIS),\n            ram_needed=SourceValue(50 * u.MB, Sources.HYPOTHESIS)\n            )\n        ]\n    )\nupload_step = UserJourneyStep(\n    \"1 min video capture then upload\",\n    user_time_spent=SourceValue(70 * u.s, Sources.USER_DATA),\n    jobs=[\n        Job(\n            \"video upload\",\n            service=service,\n            data_upload=SourceValue(20 * u.MB, Sources.USER_DATA),\n            data_download=SourceValue(0 * u.GB, Sources.USER_DATA),\n            request_duration=SourceValue(2 * u.s, Sources.HYPOTHESIS),\n            cpu_needed=SourceValue(1 * u.core, Sources.HYPOTHESIS),\n            ram_needed=SourceValue(50 * u.MB, Sources.HYPOTHESIS)\n        )\n    ]\n)\n</code></pre> <p>The user journey is then simply a list of user journey steps:</p> <pre><code>user_journey = UserJourney(\"Mean video consumption user journey\", uj_steps=[streaming_step, upload_step])\n</code></pre>"},{"location":"tutorial/#describe-usage","title":"Describe usage","text":"<p>An e-footprint usage pattern links a user journey to devices that run it, a network, a country, and the number of times the user journey gets executed hour by hour. </p> <pre><code># Let\u2019s build synthetic usage data by summing a linear growth with a sinusoidal fluctuation components, then adding daily variation\nfrom datetime import datetime, timedelta\n\nfrom efootprint.builders.time_builders import linear_growth_hourly_values\n\nstart_date = datetime.strptime(\"2025-01-01\", \"%Y-%m-%d\")\nnb_of_hours = 3 * 365 * 24\n\nlinear_growth = linear_growth_hourly_values(nb_of_hours, start_value=5000, end_value=100000, start_date=start_date)\nlinear_growth.set_label(\"Hourly user journeys linear growth component\")\n\nlinear_growth.plot()\n</code></pre> <p></p> <pre><code>from efootprint.builders.time_builders import sinusoidal_fluct_hourly_values\n\nsinusoidal_fluct = sinusoidal_fluct_hourly_values(\n    nb_of_hours, sin_fluct_amplitude=3000, sin_fluct_period_in_hours=3 * 30 * 24, start_date=start_date)\n\nlin_growth_plus_sin_fluct = (linear_growth + sinusoidal_fluct).set_label(\"Hourly user journeys linear growth with sinusoidal fluctuations\")\n\nlin_growth_plus_sin_fluct.plot()\n</code></pre> <p></p> <pre><code># Let\u2019s add daily variations because people use the system less at night\nfrom efootprint.builders.time_builders import daily_fluct_hourly_values\n\ndaily_fluct = daily_fluct_hourly_values(nb_of_hours, fluct_scale=0.8, hour_of_day_for_min_value=4, start_date=start_date)\ndaily_fluct.set_label(\"Daily volume fluctuation\")\n\ndaily_fluct.plot(xlims=[start_date, start_date+timedelta(days=1)])\n</code></pre> <p></p> <pre><code>hourly_user_journey_starts = lin_growth_plus_sin_fluct * daily_fluct\nhourly_user_journey_starts.set_label(\"Hourly number of user journey started\")\n\nhourly_user_journey_starts.plot(xlims=[start_date, start_date + timedelta(days=7)])\n</code></pre> <p></p> <pre><code># Over 3 years the daily fluctuation color the area between daily min and max number of hourly user journeys\nhourly_user_journey_starts.plot()\n</code></pre> <p></p> <pre><code>network = Network(\n        \"WIFI network\",\n        bandwidth_energy_intensity=SourceValue(0.05 * u(\"kWh/GB\"), Sources.TRAFICOM_STUDY))\n\nusage_pattern = UsagePattern(\n    \"Daily video streaming consumption\",\n    user_journey=user_journey,\n    devices=[default_laptop()],\n    network=network,\n    country=Countries.FRANCE(),\n    hourly_user_journey_starts=hourly_user_journey_starts\n)\n\nsystem = System(\"System\", usage_patterns=[usage_pattern])\n</code></pre> <pre><code>2024-09-12 15:44:33,917 - INFO - Computing calculated attributes for System System\n2024-09-12 15:44:33,918 - INFO - Computing calculated attributes for UserJourney Mean video consumption user journey\n2024-09-12 15:44:33,919 - INFO - Computing calculated attributes for UsagePattern Daily video streaming consumption\n2024-09-12 15:44:34,056 - INFO - Computing calculated attributes for Job video upload\n2024-09-12 15:44:34,061 - INFO - Computing calculated attributes for Job streaming\n2024-09-12 15:44:34,066 - INFO - Computing calculated attributes for Service Streaming platform\n2024-09-12 15:44:34,076 - INFO - Computing calculated attributes for Network WIFI network\n2024-09-12 15:44:34,082 - INFO - Computing calculated attributes for Autoscaling server\n2024-09-12 15:44:34,095 - INFO - Computing calculated attributes for Storage SSD storage\n2024-09-12 15:44:34,120 - INFO - Finished computing System modeling\n</code></pre>"},{"location":"tutorial/#results","title":"Results","text":""},{"location":"tutorial/#computed-attributes","title":"Computed attributes","text":"<p>Now all calculated_attributes have been computed:</p> <pre><code>print(server)\n</code></pre> <pre><code>Autoscaling id-7fbf5c-server\n\ncarbon_footprint_fabrication: 600 kilogram\npower: 300 watt\nlifespan: 6 year\nfraction_of_usage_time: 1 dimensionless\naverage_carbon_intensity: 100.0 gram / kilowatt_hour\nserver_utilization_rate: 0.9 dimensionless\nidle_power: 50 watt\nram: 128 gigabyte\ncpu_cores: 24 core\npower_usage_effectiveness: 1.2 dimensionless\n\ncalculated_attributes:\n  available_ram_per_instance: 114.9 gigabyte\n  available_cpu_per_instance: 19.6 core\n  all_services_cpu_needs: 26280 values from 2024-12-31 22:00:00 to 2027-12-31 21:00:00 in core:\n    first 10 vals [201.67, 146.34, 103.76, 76.95, 67.89, 77.33, 104.78, 148.5, 205.65, 272.44],\n    last 10 vals [11666.37, 12218.13, 12407.0, 12220.07, 11670.08, 10794.48, 9652.94, 8323.25, 6896.04, 5468.6]\n  all_services_ram_needs: 26280 values from 2024-12-31 22:00:00 to 2027-12-31 21:00:00 in GB:\n    first 10 vals [10.08, 7.32, 5.19, 3.85, 3.39, 3.87, 5.24, 7.43, 10.28, 13.62],\n    last 10 vals [583.32, 610.91, 620.35, 611.0, 583.5, 539.72, 482.65, 416.16, 344.8, 273.43]\n  raw_nb_of_instances: 26280 values from 2024-12-31 22:00:00 to 2027-12-31 21:00:00 in dimensionless:\n    first 10 vals [10.29, 7.47, 5.29, 3.93, 3.46, 3.95, 5.35, 7.58, 10.49, 13.9],\n    last 10 vals [595.22, 623.37, 633.01, 623.47, 595.41, 550.74, 492.5, 424.66, 351.84, 279.01]\n  nb_of_instances: 26280 values from 2024-12-31 22:00:00 to 2027-12-31 21:00:00 in dimensionless:\n    first 10 vals [11.0, 8.0, 6.0, 4.0, 4.0, 4.0, 6.0, 8.0, 11.0, 14.0],\n    last 10 vals [596.0, 624.0, 634.0, 624.0, 596.0, 551.0, 493.0, 425.0, 352.0, 280.0]\n  instances_fabrication_footprint: 26280 values from 2024-12-31 22:00:00 to 2027-12-31 21:00:00 in kg:\n    first 10 vals [0.13, 0.09, 0.07, 0.05, 0.05, 0.05, 0.07, 0.09, 0.13, 0.16],\n    last 10 vals [6.8, 7.12, 7.23, 7.12, 6.8, 6.29, 5.62, 4.85, 4.02, 3.19]\n  instances_energy: 26280 values from 2024-12-31 22:00:00 to 2027-12-31 21:00:00 in kWh:\n    first 10 vals [3.75, 2.72, 1.95, 1.42, 1.28, 1.42, 1.96, 2.75, 3.81, 5.01],\n    last 10 vals [214.33, 224.45, 227.94, 224.48, 214.38, 198.28, 177.33, 152.9, 126.67, 100.5]\n  energy_footprint: 26280 values from 2024-12-31 22:00:00 to 2027-12-31 21:00:00 in kg:\n    first 10 vals [0.37, 0.27, 0.19, 0.14, 0.13, 0.14, 0.2, 0.28, 0.38, 0.5],\n    last 10 vals [21.43, 22.45, 22.79, 22.45, 21.44, 19.83, 17.73, 15.29, 12.67, 10.05]\n</code></pre>"},{"location":"tutorial/#system-footprint-overview","title":"System footprint overview","text":"<pre><code>system.plot_footprints_by_category_and_object(\"System footprints.html\")\n</code></pre>"},{"location":"tutorial/#object-relationships-graph","title":"Object relationships graph","text":"<p>Hover over a node to get the numerical values of its environmental and technical attributes. For simplifying the graph the Network and Hardware nodes are not shown.</p> <pre><code>usage_pattern.object_relationship_graph_to_file(\"object_relationships_graph.html\", width=\"800px\", height=\"500px\",\n    classes_to_ignore=USAGE_PATTERN_VIEW_CLASSES_TO_IGNORE, notebook=True)\n</code></pre>"},{"location":"tutorial/#calculus-graph","title":"Calculus graph","text":"<p>Any e-footprint calculation can generate its calculation graph for full auditability. Hover on a calculus node to display its formula and numeric value.</p> <pre><code>usage_pattern.devices_fabrication_footprint.calculus_graph_to_file(\n    \"device_population_fab_footprint_calculus_graph.html\", width=\"800px\", height=\"500px\", notebook=True)\n</code></pre>"},{"location":"tutorial/#analysing-the-impact-of-a-change","title":"Analysing the impact of a change","text":""},{"location":"tutorial/#numeric-input-change","title":"Numeric input change","text":"<p>Any input change automatically triggers the computation of calculations that depend on the input. For example, let\u2019s say that the average data download consumption of the streaming step decreased because of a change in default video quality:</p> <pre><code>streaming_step.jobs[0].data_download = SourceValue(500 * u.MB, Sources.USER_DATA)\n</code></pre> <pre><code>system.plot_emission_diffs(\"bandwith reduction.png\")\n</code></pre> <pre><code>Plotting the impact of streaming\u2019s data_download changing from 800 megabyte to 500 megabyte\n</code></pre> <p></p>"},{"location":"tutorial/#system-structure-change","title":"System structure change","text":"<p>Now let\u2019s make a more complex change, like adding a conversation with a generative AI chatbot before streaming the video. Numerical values don\u2019t matter so much for the sake of this tutorial, please check out the e-footprint-modelings github repository for a more detailed modeling of the impact of LLM\u202ftraining and inference.</p> <pre><code>llm_server = Autoscaling(\n    \"Inference GPU server\",\n    carbon_footprint_fabrication=SourceValue(4900 * u.kg, Sources.HYPOTHESIS),\n    power=SourceValue(6400 * u.W, Sources.HYPOTHESIS),\n    lifespan=SourceValue(5 * u.year, Sources.HYPOTHESIS),\n    idle_power=SourceValue(500 * u.W, Sources.HYPOTHESIS),\n    ram=SourceValue(128 * u.GB, Sources.HYPOTHESIS),\n    cpu_cores=SourceValue(16 * u.core, Sources.HYPOTHESIS), # Used to represent GPUs because e-footprint doesn\u2019t natively model GPU resources yet.\n    power_usage_effectiveness=SourceValue(1.2 * u.dimensionless, Sources.HYPOTHESIS),\n    average_carbon_intensity=SourceValue(300 * u.g / u.kWh, Sources.HYPOTHESIS),\n    server_utilization_rate=SourceValue(1 * u.dimensionless, Sources.HYPOTHESIS))\n</code></pre> <pre><code>service_inference = Service(\n    \"LLM inference\", llm_server, storage, base_ram_consumption=SourceValue(0 * u.MB, Sources.HYPOTHESIS),\n    base_cpu_consumption=SourceValue(0 * u.core, Sources.HYPOTHESIS))\n\nllm_chat_step = UserJourneyStep(\n    \"Chat with LLM to select video\", user_time_spent=SourceValue(1 * u.min, Sources.HYPOTHESIS),\n    jobs=[Job(\"LLM API\", service_inference, SourceValue(300 * u.kB, Sources.USER_DATA),\n              SourceValue(300 * u.kB, Sources.USER_DATA), request_duration=SourceValue(5 * u.s, Sources.HYPOTHESIS),\n              cpu_needed=SourceValue(16 * u.core, Sources.HYPOTHESIS),\n              ram_needed=SourceValue(128 * u.GB, Sources.HYPOTHESIS))])\n</code></pre> <pre><code># Adding the new step is simply an attribute update.\n# Don\u2019t use user_journey.uj_steps.append(llm_chat_step) as e-footprint recomputation logic wouldn\u2019t be triggered\nuser_journey.uj_steps += [llm_chat_step]\n</code></pre> <pre><code>2024-09-12 15:44:36,189 - INFO - Computing calculated attributes for UserJourney Mean video consumption user journey\n2024-09-12 15:44:36,190 - INFO - Computing calculated attributes for UsagePattern Daily video streaming consumption\n2024-09-12 15:44:36,320 - INFO - Computing calculated attributes for Job video upload\n2024-09-12 15:44:36,325 - INFO - Computing calculated attributes for Job LLM API\n2024-09-12 15:44:36,331 - INFO - Computing calculated attributes for Job streaming\n2024-09-12 15:44:36,335 - INFO - Computing calculated attributes for Service Streaming platform\n2024-09-12 15:44:36,343 - INFO - Computing calculated attributes for Network WIFI network\n2024-09-12 15:44:36,350 - INFO - Computing calculated attributes for Service LLM inference\n2024-09-12 15:44:36,355 - INFO - Computing calculated attributes for Autoscaling server\n2024-09-12 15:44:36,367 - INFO - Computing calculated attributes for Storage SSD storage\n2024-09-12 15:44:36,393 - INFO - Computing calculated attributes for Autoscaling Inference GPU server\n</code></pre> <pre><code>system.plot_emission_diffs(\"LLM chat addition.png\")\n</code></pre> <pre><code>Plotting the impact of Mean video consumption user journey\u2019s uj_steps changing from ['20 min streaming', '1 min video capture then upload'] to ['20 min streaming', '1 min video capture then upload', 'Chat with LLM to select video']\n</code></pre> <p></p> <p>We can see that server energy footprint has been multiplied by more than 10 and the rest of the impact is quite negligible. Good to know to make informed decisions ! Of course the impact is very much dependent on assumptions. If the LLM\u202fserver ran on low-carbon electricity for example:</p> <pre><code>llm_server.average_carbon_intensity=SourceValue(50 * u.g / u.kWh, Sources.HYPOTHESIS)\nsystem.plot_emission_diffs(\"lower LLM inference carbon intensity.png\")\n</code></pre> <pre><code>Plotting the impact of Inference GPU server\u2019s average_carbon_intensity changing from 300.0 gram / kilowatt_hour to 50.0 gram / kilowatt_hour\n</code></pre> <p></p>"},{"location":"tutorial/#recap-of-all-system-changes","title":"Recap of all System changes","text":"<pre><code>system.plot_emission_diffs(\"All system diffs.png\", from_start=True)\n</code></pre> <pre><code>Plotting the impact of:\n\n- streaming\u2019s data_download changing from 800 megabyte to 500 megabyte\n- Mean video consumption user journey\u2019s uj_steps changing from ['20 min streaming', '1 min video capture then upload'] to ['20 min streaming', '1 min video capture then upload', 'Chat with LLM to select video']\n- Inference GPU server\u2019s average_carbon_intensity changing from 300.0 gram / kilowatt_hour to 50.0 gram / kilowatt_hour\n</code></pre>"},{"location":"why_efootprint/","title":"Why e-footprint ?","text":"<p>For a more in-depth discussion of e-footprint\u2019s genesis by its designer, watch the e-footprint presentation made by Vincent Villet at the 2023 Paris Impact Summit (9 minutes, in French).</p>"},{"location":"why_efootprint/#the-need-for-modeling-in-ecodesign","title":"The need for modeling in ecodesign","text":"<p>We define ecodesign as the process of building or maintaining a digital service while minimizing its environmental impact. To do so, we first need to understand where its impact comes from and then be able to anticipate the impact of considered actions to choose the most appropriate one.</p> <p>How much intuition can we use to prioritize ecodesign actions ? Is it enough to give tech people a green IT training and let their experience do the rest ? This approach works well for web performance, where the combination of theory and practice allows experienced professionals to build an intuitive understanding of their systems, but there is a major difference between a digital service performance and its environmental impact: a poor performance is perceptible (and even often frustrating !), while the environmental impact lives entirely outside of the reach of our senses. This great distance in space and time between our actions and their impacts (described in more details in this excellent article from Jean-Marc Jancovici) is a very new and difficult problem for humanity, touches every aspect of modern life, and is especially salient for digital services. It calls for a fully explicit model because building intuition is simply not possible.</p>"},{"location":"why_efootprint/#how-precise-does-the-modeling-need-to-be","title":"How precise does the modeling need to be ?","text":"<p>Now that we know that we need an explicit model, we need to know how precise the model needs to be to allow for good decision-making. Indeed, any understanding is a tradeoff between precision and usability. For example, having in mind a mental model that says \"for an average consumer car, driving at 110km/h on the highway instead of 130km/h reduces the speed by 15% but the oil consumption by 25%\" is simplistic because many factors influence the result (the exact shape of the car, the wind, the profile of the road etc.). However, I consider it usable for the decision I have to make (which speed to drive at when taking the highway) because I know that the exact oil saving figure for the particular vehicle I\u2019m driving won\u2019t be so far from this simplified average. This example introduces two important concepts that physicists often use:</p> <ul> <li>reduced-order modeling, where the mathematical complexity of a real world phenomenon is voluntarily simplified while preserving enough precision for the task at hand.</li> <li>order of magnitude, an approximate figure that is easier to obtain and use in reduced-order model computations, and enough to make informed decisions.</li> </ul> <p>The more complex and variable the studied system is, the more complex (=high order) the corresponding model needs to be before it delivers useful orders of magnitude.</p> <p>How complex would a good enough model need to be to effectively guide ecodesign decisions ? It depends on the complexity and variability of digital services. Let\u2019s make some observations and some simple thought experiments to find out the essential parameters.</p> <p>First and foremost, digital services vary wildly in usage volumes. The biggest social networks have billions of daily visits while your company showcase website might have only a few hundreds. The same ecodesign action leading to a 10% energy consumption reduction will be vastly more impactful on the big system than on the small one, so usage volume input is critical.</p> <p>Then let\u2019s look at the four key components of digital services: user devices, network, servers and storage. Different services make use of them in vastly different proportions, making each of them sometimes negligible, sometimes crucial. For example, streaming services make a heavy use of the network, gen AI services use a lot of computing power in servers, and social networks store huge amounts of data. All these different types of objects thus need to be represented in our model.</p> <p>Lastly, many ecodesign actions involve changing the way users interact with the service, so there needs to be a way to tell the model that users have changed the actions that they typically do. Hence, user journeys must be part of the model inputs.</p> <p>We now have a framework for thinking about the physicality of our digital service: digital services must at least be described in terms of user journeys (UserJourney) with their usage information (UsagePattern). Each user journey is made of steps (UserJourneyStep) that make requests (Job) through a network (Network) to software (Service) installed on a server (Server), possibly saving data to storage (Storage).</p> <p>e-footprint was born from the above analysis and the observation that no other tool had taken a modeling approach bringing together all these objects. It started as an Excel modeling and then evolved towards a Python package to allow for greater flexibility in the combination of objects.</p> <p>Moreover, it is necessary to take a life cycle analysis approach to understand all aspects of environmental impact from cradle to grave. Here the orders of magnitude show that focusing on the fabrication and run phases of the service is a good first approximation, neglecting transport and end of life.</p>"},{"location":"why_efootprint/#the-difference-between-the-model-and-the-modeling","title":"The difference between the model and the modeling","text":"<p>e-footprint is a modeling tool that embeds a model of the relationships between components of a digital service and the associated environmental footprint. When you describe your digital service with e-footprint, what you get is a modeling of this service.</p> <p>For more details on the model design decisions in e-footprint, check the model design deep dive.</p>"},{"location":"why_efootprint/#get-started","title":"Get started","text":"<p>Now that you understand the concepts on which e-footprint is built, read the How to get started article to start your ecodesign journey !</p>"}]}